cscope 15 /nfs/ug/homes-5/l/liuyi34/csc418/a3/raytracer               0000056972
	@bmp_io.cpp

1 
	~<c°dlib
>

2 
	~<io°ªam
>

3 
	~<iom™ù
>

4 
	~<f°ªam
>

6 
usög
 
«me•a˚
 
	g°d
;

8 
	~"bmp_io.h
"

18 
boﬁ
 
	gbmp_byã_sw≠
 = 
åue
;

22 
boﬁ
 
	$bmp_byã_sw≠_gë
 ( )

43  
bmp_byã_sw≠
;

44 
	}
}

47 
	$bmp_byã_sw≠_£t
 ( 
boﬁ
 
vÆue
 )

68 
bmp_byã_sw≠
 = 
vÆue
;

71 
	}
}

74 
boﬁ
 
	$bmp_08_d©a_ªad
 ( 
if°ªam
 &
fûe_ö
, 
width
, 
height
,

75 *
øºay
 )

135 
c
;

136 
boﬁ
 
îr‹
;

137 
i
;

138 *
ödexr
;

139 
j
;

140 
numbyã
;

141 
∑ddög
;

145 
∑ddög
 = ( 4 - ( ( 1 * 
width
 ) % 4 ) ) % 4;

147 
ödexr
 = 
øºay
;

148 
numbyã
 = 0;

150  
j
 = 0; j < 
	`abs
 ( 
height
 ); j++ )

152  
i
 = 0; i < 
width
; i++ )

154 
fûe_ö
.
	`ªad
 ( &
c
, 1 );

156 
îr‹
 = 
fûe_ö
.
	`eof
();

158 i‡–
îr‹
 )

160 
cout
 << "\n";

161 
cout
 << "BMP_08_DATA_READ: FatalÉrror!\n";

162 
cout
 << " FaûedÑódög R f‹Öixñ (" << 
i
 << "," << 
j
 << ").\n";

163  
îr‹
;

166 *
ödexr
 = ( Ë
c
;

167 
numbyã
 =Çumbyte + 1;

168 
ödexr
 = indexr + 1;

173  
i
 = 0; i < 
∑ddög
; i++ )

176 
fûe_ö
.
	`ªad
 ( &
c
, 1 );

178 
îr‹
 = 
fûe_ö
.
	`eof
();

180 i‡–
îr‹
 )

182 
cout
 << "\n";

183 
cout
 << "BMP_08_DATA_READ - Warning!\n";

184 
cout
 << " Faûed whûêªadögÖaddög ch¨a˘î " << 
i
 << "\n";

185 
cout
 << " o‡tŸÆ " << 
∑ddög
 << " characters\n";

186 
cout
 << "áàthêíd o‡löê" << 
j
 << "\n";

187 
cout
 << "\n";

188 
cout
 << " This isá minorÉrror.\n";

189  
Ál£
;

194  
Ál£
;

195 
	}
}

198 
	$bmp_08_d©a_wrôe
 ( 
of°ªam
 &
fûe_out
, 
width
,

199 
height
, *
øºay
 )

254 
i
;

255 *
ödexr
;

256 
j
;

257 
∑ddög
;

261 
∑ddög
 = ( 4 - ( ( 1 * 
width
 ) % 4 ) ) % 4;

263 
ödexr
 = 
øºay
;

265  
j
 = 0; j < 
	`abs
 ( 
height
 ); j++ )

267  
i
 = 0; i < 
width
; i++ )

269 
fûe_out
 << *
ödexr
;

270 
ödexr
 = indexr + 1;

273  
i
 = 0; i < 
∑ddög
; i++ )

275 
fûe_out
 << 0;

280 
	}
}

283 
boﬁ
 
	$bmp_24_d©a_ªad
 ( 
if°ªam
 &
fûe_ö
, 
width
, 
height
,

284 *
øºay
, *
g¨øy
, *
b¨øy
 )

341 
c
;

342 
boﬁ
 
îr‹
;

343 
i
;

344 *
ödexb
;

345 *
ödexg
;

346 *
ödexr
;

347 
j
;

348 
numbyã
;

349 
∑ddög
;

353 
∑ddög
 = ( 4 - ( ( 3 * 
width
 ) % 4 ) ) % 4;

355 
ödexr
 = 
øºay
;

356 
ödexg
 = 
g¨øy
;

357 
ödexb
 = 
b¨øy
;

358 
numbyã
 = 0;

360  
j
 = 0; j < 
	`abs
 ( 
height
 ); j++ )

362  
i
 = 0; i < 
width
; i++ )

365 
fûe_ö
.
	`ªad
 ( &
c
, 1 );

367 
îr‹
 = 
fûe_ö
.
	`eof
();

369 i‡–
îr‹
 )

371 
cout
 << "\n";

372 
cout
 << "BMP_24_DATA_READ: FatalÉrror!\n";

373 
cout
 << " FaûedÑódög B f‹Öixñ (" << 
i
 << "," << 
j
 << ").\n";

374  
îr‹
;

377 *
ödexb
 = ( Ë
c
;

378 
numbyã
 =Çumbyte + 1;

379 
ödexb
 = indexb + 1;

381 
fûe_ö
.
	`ªad
 ( &
c
, 1 );

383 
îr‹
 = 
fûe_ö
.
	`eof
();

385 i‡–
îr‹
 )

387 
cout
 << "\n";

388 
cout
 << "BMP_24_DATA_READ: FatalÉrror!\n";

389 
cout
 << " FaûedÑódög G f‹Öixñ (" << 
i
 << "," << 
j
 << ").\n";

390  
îr‹
;

393 *
ödexg
 = ( Ë
c
;

394 
numbyã
 =Çumbyte + 1;

395 
ödexg
 = indexg + 1;

397 
fûe_ö
.
	`ªad
 ( &
c
, 1 );

399 
îr‹
 = 
fûe_ö
.
	`eof
();

401 i‡–
îr‹
 )

403 
cout
 << "\n";

404 
cout
 << "BMP_24_DATA_READ: FatalÉrror!\n";

405 
cout
 << " FaûedÑódög R f‹Öixñ (" << 
i
 << "," << 
j
 << ").\n";

406  
îr‹
;

409 *
ödexr
 = ( Ë
c
;

410 
numbyã
 =Çumbyte + 1;

411 
ödexr
 = indexr + 1;

416  
i
 = 0; i < 
∑ddög
; i++ )

419 
fûe_ö
.
	`ªad
 ( &
c
, 1 );

421 
îr‹
 = 
fûe_ö
.
	`eof
();

423 i‡–
îr‹
 )

425 
cout
 << "\n";

426 
cout
 << "BMP_24_DATA_READ - Warning!\n";

427 
cout
 << " Faûed whûêªadögÖaddög ch¨a˘î " << 
i
 << "\n";

428 
cout
 << " o‡tŸÆ " << 
∑ddög
 << " characters\n";

429 
cout
 << "áàthêíd o‡löê" << 
j
 << "\n";

430 
cout
 << "\n";

431 
cout
 << " This isá minorÉrror.\n";

432  
Ál£
;

437  
Ál£
;

438 
	}
}

441 
	$bmp_24_d©a_wrôe
 ( 
of°ªam
 &
fûe_out
, 
width
,

442 
height
, *
øºay
, *
g¨øy
,

443 *
b¨øy
 )

495 
i
;

496 *
ödexb
;

497 *
ödexg
;

498 *
ödexr
;

499 
j
;

500 
∑ddög
;

504 
∑ddög
 = ( 4 - ( ( 3 * 
width
 ) % 4 ) ) % 4;

506 
ödexr
 = 
øºay
;

507 
ödexg
 = 
g¨øy
;

508 
ödexb
 = 
b¨øy
;

510  
j
 = 0; j < 
	`abs
 ( 
height
 ); j++ )

512  
i
 = 0; i < 
width
; i++ )

514 
fûe_out
 << *
ödexb
;

515 
fûe_out
 << *
ödexg
;

516 
fûe_out
 << *
ödexr
;

518 
ödexb
 = indexb + 1;

519 
ödexg
 = indexg + 1;

520 
ödexr
 = indexr + 1;

523  
i
 = 0; i < 
∑ddög
; i++ )

525 
fûe_out
 << 0;

530 
	}
}

533 
	$bmp_hódî1_¥öt
 ( 
fûëy≥
,

534 
fûesize
, 
ª£rved1
,

535 
ª£rved2
, 
bôm≠off£t
 )

590 
cout
 << "\n";

591 
cout
 << " Contents of BMP file header:\n";

592 
cout
 << "\n";

593 
cout
 << " FILETYPE = " << 
fûëy≥
 << "\n";

594 
cout
 << " FILESIZE = " << 
fûesize
 << "\n";

595 
cout
 << " RESERVED1 = " << 
ª£rved1
 << "\n";

596 
cout
 << " RESERVED2 = " << 
ª£rved2
 << "\n";

597 
cout
 << " BITMAPOFFSET = " << 
bôm≠off£t
 << "\n";

600 
	}
}

603 
boﬁ
 
	$bmp_hódî1_ªad
 ( 
if°ªam
 &
fûe_ö
, *
fûëy≥
,

604 *
fûesize
, *
ª£rved1
,

605 *
ª£rved2
, *
bôm≠off£t
 )

662 
boﬁ
 
îr‹
;

663 
i1
;

664 
i2
;

668 
îr‹
 = 
	`u_sh‹t_öt_ªad
 ( 
fûëy≥
, 
fûe_ö
 );

670 i‡–
îr‹
 )

672  
îr‹
;

677 i‡–
bmp_byã_sw≠
 )

679 
i1
 = ( Ë–*
fûëy≥
 / 256 );

680 
i2
 = ( Ë–*
fûëy≥
 % 256 );

681 *
fûëy≥
 = 
i2
 * 256 + 
i1
;

686 
îr‹
 = 
	`u_l⁄g_öt_ªad
 ( 
fûesize
, 
fûe_ö
 );

687 i‡–
îr‹
 )

689  
îr‹
;

694 
îr‹
 = 
	`u_sh‹t_öt_ªad
 ( 
ª£rved1
, 
fûe_ö
 );

695 i‡–
îr‹
 )

697  
îr‹
;

702 
îr‹
 = 
	`u_sh‹t_öt_ªad
 ( 
ª£rved2
, 
fûe_ö
 );

703 i‡–
îr‹
 )

705  
îr‹
;

710 
îr‹
 = 
	`u_l⁄g_öt_ªad
 ( 
bôm≠off£t
, 
fûe_ö
 );

711 i‡–
îr‹
 )

713  
îr‹
;

716 
îr‹
 = 
Ál£
;

717  
îr‹
;

718 
	}
}

721 
	$bmp_hódî1_wrôe
 ( 
of°ªam
 &
fûe_out
, 
fûëy≥
,

722 
fûesize
, 
ª£rved1
,

723 
ª£rved2
, 
bôm≠off£t
 )

780 
	`u_sh‹t_öt_wrôe
 ( 
fûëy≥
, 
fûe_out
 );

781 
	`u_l⁄g_öt_wrôe
 ( 
fûesize
, 
fûe_out
 );

782 
	`u_sh‹t_öt_wrôe
 ( 
ª£rved1
, 
fûe_out
 );

783 
	`u_sh‹t_öt_wrôe
 ( 
ª£rved2
, 
fûe_out
 );

784 
	`u_l⁄g_öt_wrôe
 ( 
bôm≠off£t
, 
fûe_out
 );

787 
	}
}

790 
	$bmp_hódî2_¥öt
 ( 
size
, 
width
,

791 
height
,

792 
∂™es
, 
bô•îpixñ
,

793 
com¥essi⁄
, 
sizeofbôm≠
,

794 
h‹zªsﬁuti⁄
, 
vîåesﬁuti⁄
,

795 
cﬁ‹su£d
, 
cﬁ‹simp‹è¡
 )

870 
cout
 << "\n";

871 
cout
 << " Contents of BMP file bitmap header:\n";

872 
cout
 << "\n";

873 
cout
 << " SIZE = " << 
size
 << "\n";

874 
cout
 << " WIDTH = " << 
width
 << "\n";

875 
cout
 << " HEIGHT = " << 
height
 << "\n";

876 
cout
 << " PLANES = " << 
∂™es
 << "\n";

877 
cout
 << " BITSPERPIXEL = " << 
bô•îpixñ
 << "\n";

878 
cout
 << " COMPRESSION = " << 
com¥essi⁄
 << "\n";

879 
cout
 << " SIZEOFBITMAP = " << 
sizeofbôm≠
 << "\n";

880 
cout
 << " HORZRESOLUTION = " << 
h‹zªsﬁuti⁄
 << "\n";

881 
cout
 << " VERTRESOLUTION = " << 
vîåesﬁuti⁄
 << "\n";

882 
cout
 << " COLORSUSED = " << 
cﬁ‹su£d
 << "\n";

883 
cout
 << " COLORSIMPORTANT = " << 
cﬁ‹simp‹è¡
 << "\n";

886 
	}
}

889 
boﬁ
 
	$bmp_hódî2_ªad
 ( 
if°ªam
 &
fûe_ö
, *
size
,

890 *
width
, *
height
,

891 *
∂™es
, *
bô•îpixñ
,

892 *
com¥essi⁄
, *
sizeofbôm≠
,

893 *
h‹zªsﬁuti⁄
, *
vîåesﬁuti⁄
,

894 *
cﬁ‹su£d
, *
cﬁ‹simp‹è¡
 )

973 
boﬁ
 
îr‹
;

977 
îr‹
 = 
	`u_l⁄g_öt_ªad
 ( 
size
, 
fûe_ö
 );

978 i‡–
îr‹
 )

980  
îr‹
;

985 
îr‹
 = 
	`u_l⁄g_öt_ªad
 ( 
width
, 
fûe_ö
 );

986 i‡–
îr‹
 )

988  
îr‹
;

993 
îr‹
 = 
	`l⁄g_öt_ªad
 ( 
height
, 
fûe_ö
 );

994 i‡–
îr‹
 )

996  
îr‹
;

1001 
îr‹
 = 
	`u_sh‹t_öt_ªad
 ( 
∂™es
, 
fûe_ö
 );

1002 i‡–
îr‹
 )

1004  
îr‹
;

1009 
îr‹
 = 
	`u_sh‹t_öt_ªad
 ( 
bô•îpixñ
, 
fûe_ö
 );

1010 i‡–
îr‹
 )

1012  
îr‹
;

1017 
îr‹
 = 
	`u_l⁄g_öt_ªad
 ( 
com¥essi⁄
, 
fûe_ö
 );

1018 i‡–
îr‹
 )

1020  
îr‹
;

1025 
îr‹
 = 
	`u_l⁄g_öt_ªad
 ( 
sizeofbôm≠
, 
fûe_ö
 );

1026 i‡–
îr‹
 )

1028  
îr‹
;

1033 
îr‹
 = 
	`u_l⁄g_öt_ªad
 ( 
h‹zªsﬁuti⁄
, 
fûe_ö
 );

1034 i‡–
îr‹
 )

1036  
îr‹
;

1041 
îr‹
 = 
	`u_l⁄g_öt_ªad
 ( 
vîåesﬁuti⁄
, 
fûe_ö
 );

1042 i‡–
îr‹
 )

1044  
îr‹
;

1049 
îr‹
 = 
	`u_l⁄g_öt_ªad
 ( 
cﬁ‹su£d
, 
fûe_ö
 );

1050 i‡–
îr‹
 )

1052  
îr‹
;

1057 
îr‹
 = 
	`u_l⁄g_öt_ªad
 ( 
cﬁ‹simp‹è¡
, 
fûe_ö
 );

1058 i‡–
îr‹
 )

1060  
îr‹
;

1063 
îr‹
 = 
Ál£
;

1064  
îr‹
;

1065 
	}
}

1068 
	$bmp_hódî2_wrôe
 ( 
of°ªam
 &
fûe_out
, 
size
,

1069 
width
, 
height
,

1070 
∂™es
, 
bô•îpixñ
,

1071 
com¥essi⁄
, 
sizeofbôm≠
,

1072 
h‹zªsﬁuti⁄
, 
vîåesﬁuti⁄
,

1073 
cﬁ‹su£d
, 
cﬁ‹simp‹è¡
 )

1153 
	`u_l⁄g_öt_wrôe
 ( 
size
, 
fûe_out
 );

1154 
	`u_l⁄g_öt_wrôe
 ( 
width
, 
fûe_out
 );

1155 
	`l⁄g_öt_wrôe
 ( 
height
, 
fûe_out
 );

1156 
	`u_sh‹t_öt_wrôe
 ( 
∂™es
, 
fûe_out
 );

1157 
	`u_sh‹t_öt_wrôe
 ( 
bô•îpixñ
, 
fûe_out
 );

1158 
	`u_l⁄g_öt_wrôe
 ( 
com¥essi⁄
, 
fûe_out
 );

1159 
	`u_l⁄g_öt_wrôe
 ( 
sizeofbôm≠
, 
fûe_out
 );

1160 
	`u_l⁄g_öt_wrôe
 ( 
h‹zªsﬁuti⁄
, 
fûe_out
 );

1161 
	`u_l⁄g_öt_wrôe
 ( 
vîåesﬁuti⁄
, 
fûe_out
 );

1162 
	`u_l⁄g_öt_wrôe
 ( 
cﬁ‹su£d
, 
fûe_out
 );

1163 
	`u_l⁄g_öt_wrôe
 ( 
cﬁ‹simp‹è¡
, 
fûe_out
 );

1166 
	}
}

1169 
	$bmp_∑Àâe_¥öt
 ( 
cﬁ‹su£d
,

1170 *
Ω¨øy
, *
g∑ºay
, *
b∑ºay
,

1171 *
≠¨øy
 )

1211 
i
;

1212 *
ödexa
;

1213 *
ödexb
;

1214 *
ödexg
;

1215 *
ödexr
;

1217 
cout
 << "\n";

1218 
cout
 << " Palette information from BMP file:\n";

1219 
cout
 << "\n";

1221 i‡–
cﬁ‹su£d
 < 1 )

1223 
cout
 << " Thereáre NO colors defined forÅheÖalette.\n";

1227 
ödexr
 = 
Ω¨øy
;

1228 
ödexg
 = 
g∑ºay
;

1229 
ödexb
 = 
b∑ºay
;

1230 
ödexa
 = 
≠¨øy
;

1232 
cout
 << "\n";

1233 
cout
 << " Color Blue Green Red Trans\n";

1234 
cout
 << "\n";

1236  
i
 = 0; i < 
cﬁ‹su£d
; i++ )

1238 
cout
 << 
	`£tw
(6Ë<< 
i
 << " "

1239 << 
	`£tw
(6Ë<< *
ödexb
 << " "

1240 << 
	`£tw
(6Ë<< *
ödexg
 << " "

1241 << 
	`£tw
(6Ë<< *
ödexr
 << " "

1242 << 
	`£tw
(6Ë<< *
ödexa
 << "\n";

1244 
ödexb
 = indexb + 1;

1245 
ödexg
 = indexg + 1;

1246 
ödexr
 = indexr + 1;

1247 
ödexa
 = indexa + 1;

1252 
	}
}

1255 
boﬁ
 
	$bmp_∑Àâe_ªad
 ( 
if°ªam
 &
fûe_ö
, 
cﬁ‹su£d
,

1256 *
Ω¨øy
, *
g∑ºay
, *
b∑ºay
,

1257 *
≠¨øy
 )

1306 
c
;

1307 
boﬁ
 
îr‹
;

1308 
i
;

1309 *
ödexa
;

1310 *
ödexb
;

1311 *
ödexg
;

1312 *
ödexr
;

1314 
ödexr
 = 
Ω¨øy
;

1315 
ödexg
 = 
g∑ºay
;

1316 
ödexb
 = 
b∑ºay
;

1317 
ödexa
 = 
≠¨øy
;

1319  
i
 = 0; i < 
cﬁ‹su£d
; i++ )

1322 
fûe_ö
.
	`ªad
 ( &
c
, 1 );

1324 
îr‹
 = 
fûe_ö
.
	`eof
();

1326 i‡–
îr‹
 )

1328 
cout
 << "\n";

1329 
cout
 << "BMP_PALETTE_READ: FatalÉrror!\n";

1330 
cout
 << " FaûedÑódög B f‹ÖÆëã cﬁ‹ " << 
i
 << ".\n";

1331  
îr‹
;

1334 *
ödexb
 = ( Ë
c
;

1335 
ödexb
 = indexb + 1;

1337 
fûe_ö
.
	`ªad
 ( &
c
, 1 );

1339 
îr‹
 = 
fûe_ö
.
	`eof
();

1341 i‡–
îr‹
 )

1343 
cout
 << "\n";

1344 
cout
 << "BMP_PALETTE_READ: FatalÉrror!\n";

1345 
cout
 << " FaûedÑódög G f‹ÖÆëã cﬁ‹ " << 
i
 << ".\n";

1346  
îr‹
;

1349 *
ödexg
 = ( Ë
c
;

1350 
ödexg
 = indexg + 1;

1352 
fûe_ö
.
	`ªad
 ( &
c
, 1 );

1354 
îr‹
 = 
fûe_ö
.
	`eof
();

1356 i‡–
îr‹
 )

1358 
cout
 << "\n";

1359 
cout
 << "BMP_PALETTE_READ: FatalÉrror!\n";

1360 
cout
 << " FaûedÑódög R f‹ÖÆëã cﬁ‹ " << 
i
 << ".\n";

1361  
îr‹
;

1364 *
ödexr
 = ( Ë
c
;

1365 
ödexr
 = indexr + 1;

1367 
fûe_ö
.
	`ªad
 ( &
c
, 1 );

1369 
îr‹
 = 
fûe_ö
.
	`eof
();

1371 i‡–
îr‹
 )

1373 
cout
 << "\n";

1374 
cout
 << "BMP_PALETTE_READ: FatalÉrror!\n";

1375 
cout
 << " FaûedÑódög A f‹ÖÆëã cﬁ‹ " << 
i
 << ".\n";

1376  
îr‹
;

1379 *
ödexa
 = ( Ë
c
;

1380 
ödexa
 = indexa + 1;

1383 
îr‹
 = 
Ál£
;

1384  
îr‹
;

1385 
	}
}

1388 
	$bmp_∑Àâe_wrôe
 ( 
of°ªam
 &
fûe_out
, 
cﬁ‹su£d
,

1389 *
Ω¨øy
, *
g∑ºay
, *
b∑ºay
,

1390 *
≠¨øy
 )

1432 
i
;

1433 *
ödexa
;

1434 *
ödexb
;

1435 *
ödexg
;

1436 *
ödexr
;

1438 
ödexr
 = 
Ω¨øy
;

1439 
ödexg
 = 
g∑ºay
;

1440 
ödexb
 = 
b∑ºay
;

1441 
ödexa
 = 
≠¨øy
;

1443  
i
 = 0; i < 
cﬁ‹su£d
; i++ )

1445 
fûe_out
 << *
ödexb
;

1446 
fûe_out
 << *
ödexg
;

1447 
fûe_out
 << *
ödexr
;

1448 
fûe_out
 << *
ödexa
;

1450 
ödexb
 = indexb + 1;

1451 
ödexg
 = indexg + 1;

1452 
ödexr
 = indexr + 1;

1453 
ödexa
 = indexa + 1;

1457 
	}
}

1460 
boﬁ
 
	$bmp_¥öt_ã°
 ( c⁄° *
fûe_ö_«me
 )

1504 
	#VERBOSE
 
Ál£


	)

1506 *
≠¨øy
;

1507 *
b¨øy
;

1508 *
b∑ºay
;

1509 
bôm≠off£t
;

1510 
bô•îpixñ
;

1511 
cﬁ‹simp‹è¡
;

1512 
cﬁ‹su£d
;

1513 
com¥essi⁄
;

1514 
boﬁ
 
îr‹
;

1515 
if°ªam
 
fûe_ö
;

1516 
fûesize
;

1517 
fûëy≥
;

1518 *
g¨øy
;

1519 *
g∑ºay
;

1520 
height
;

1521 
h‹zªsﬁuti⁄
;

1522 
numbyãs
;

1523 
∂™es
;

1524 *
øºay
;

1525 *
Ω¨øy
;

1526 
ª£rved1
;

1527 
ª£rved2
;

1528 
size
;

1529 
sizeofbôm≠
;

1530 
vîåesﬁuti⁄
;

1531 
width
;

1535 
fûe_ö
.
	`›í
 ( 
fûe_ö_«me
, 
ios
::
ö
 | ios::
bö¨y
 );

1537 i‡–!
fûe_ö
 )

1539 
îr‹
 = 
åue
;

1540 
cout
 << "\n";

1541 
cout
 << "BMP_PRINT_TEST - FatalÉrror!\n";

1542 
cout
 << " CouldÇot openÅhe input file.\n";

1543  
îr‹
;

1545 
cout
 << "\n";

1546 
cout
 << "BMP_PRINT_TEST:\n";

1547 
cout
 << " C⁄ã¡†o‡BMP fûê\"" << 
fûe_ö_«me
 << "\"\n";

1551 
îr‹
 = 
	`bmp_hódî1_ªad
 ( 
fûe_ö
, &
fûëy≥
, &
fûesize
, &
ª£rved1
,

1552 &
ª£rved2
, &
bôm≠off£t
 );

1554 i‡–
îr‹
 )

1556 
cout
 << "\n";

1557 
cout
 << "BMP_PRINT_TEST: FatalÉrror!\n";

1558 
cout
 << " BMP_HEADER1_READ failed.\n";

1559  
îr‹
;

1562 
	`bmp_hódî1_¥öt
 ( 
fûëy≥
, 
fûesize
, 
ª£rved1
, 
ª£rved2
, 
bôm≠off£t
 );

1566 
îr‹
 = 
	`bmp_hódî2_ªad
 ( 
fûe_ö
, &
size
, &
width
, &
height
, &
∂™es
,

1567 &
bô•îpixñ
, &
com¥essi⁄
, &
sizeofbôm≠
, &
h‹zªsﬁuti⁄
,

1568 &
vîåesﬁuti⁄
, &
cﬁ‹su£d
, &
cﬁ‹simp‹è¡
 );

1570 i‡–
îr‹
 )

1572 
cout
 << "\n";

1573 
cout
 << "BMP_PRINT_TEST: FatalÉrror!\n";

1574 
cout
 << " BMP_HEADER2_READ failed.\n";

1575  
îr‹
;

1578 
	`bmp_hódî2_¥öt
 ( 
size
, 
width
, 
height
, 
∂™es
, 
bô•îpixñ
,

1579 
com¥essi⁄
, 
sizeofbôm≠
, 
h‹zªsﬁuti⁄
, 
vîåesﬁuti⁄
,

1580 
cﬁ‹su£d
, 
cﬁ‹simp‹è¡
 );

1586 
Ω¨øy
 = 
√w
 [
cﬁ‹su£d
];

1587 
g∑ºay
 = 
√w
 [
cﬁ‹su£d
];

1588 
b∑ºay
 = 
√w
 [
cﬁ‹su£d
];

1589 
≠¨øy
 = 
√w
 [
cﬁ‹su£d
];

1591 
îr‹
 = 
	`bmp_∑Àâe_ªad
 ( 
fûe_ö
, 
cﬁ‹su£d
, 
Ω¨øy
, 
g∑ºay
,

1592 
b∑ºay
, 
≠¨øy
 );

1594 i‡–
îr‹
 )

1596 
cout
 << "\n";

1597 
cout
 << "BMP_PRINT_TEST: FatalÉrror!\n";

1598 
cout
 << " BMP_PALETTE_READ failed.\n";

1599  
îr‹
;

1602 
	`bmp_∑Àâe_¥öt
 ( 
cﬁ‹su£d
, 
Ω¨øy
, 
g∑ºay
, 
b∑ºay
, 
≠¨øy
 );

1604 
dñëe
 [] 
Ω¨øy
;

1605 
dñëe
 [] 
g∑ºay
;

1606 
dñëe
 [] 
b∑ºay
;

1607 
dñëe
 [] 
≠¨øy
;

1612 
numbyãs
 = 
width
 * 
	`abs
 ( 
height
 ) *  ( );

1614 
øºay
 = 
√w
 [
numbyãs
];

1615 
g¨øy
 = 
√w
 [
numbyãs
];

1616 
b¨øy
 = 
√w
 [
numbyãs
];

1620 i‡–
bô•îpixñ
 == 8 )

1622 
îr‹
 = 
	`bmp_08_d©a_ªad
 ( 
fûe_ö
, 
width
, 
height
, 
øºay
 );

1624 i‡–
îr‹
 )

1626 
cout
 << "\n";

1627 
cout
 << "BMP_PRINT_TEST: FatalÉrror!\n";

1628 
cout
 << " BMP_08_DATA_READ failed.\n";

1629  
îr‹
;

1632 *
g¨øy
 = *
øºay
;

1633 *
b¨øy
 = *
øºay
;

1635 i‡–
bô•îpixñ
 == 24 )

1637 
îr‹
 = 
	`bmp_24_d©a_ªad
 ( 
fûe_ö
, 
width
, 
height
, 
øºay
, 
g¨øy
,

1638 
b¨øy
 );

1640 i‡–
îr‹
 )

1642 
cout
 << "\n";

1643 
cout
 << "BMP_PRINT_TEST: FatalÉrror!\n";

1644 
cout
 << " BMP_24_DATA_READ failed.\n";

1645  
îr‹
;

1650 
cout
 << "\n";

1651 
cout
 << "BMP_PRINT_TEST: FatalÉrror!\n";

1652 
cout
 << " Uƒecognized vÆuêo‡BITSPERPIXEL = " << 
bô•îpixñ
 << "\n";

1656 
dñëe
 [] 
øºay
;

1657 
dñëe
 [] 
g¨øy
;

1658 
dñëe
 [] 
b¨øy
;

1662 
fûe_ö
.
	`˛o£
 ( );

1664  
îr‹
;

1665 #unde‡
VERBOSE


1666 
	}
}

1669 
boﬁ
 
	$bmp_ªad
 ( c⁄° *
fûe_ö_«me
, *
width
, *
height
,

1670 **
øºay
, **
g¨øy
, **
b¨øy
 )

1724 *
≠¨øy
;

1725 
bôm≠off£t
;

1726 
bô•îpixñ
;

1727 *
b∑ºay
;

1728 
cﬁ‹simp‹è¡
;

1729 
cﬁ‹su£d
;

1730 
com¥essi⁄
;

1731 
boﬁ
 
îr‹
;

1732 
if°ªam
 
fûe_ö
;

1733 
fûesize
;

1734 
fûëy≥
;

1735 *
g∑ºay
;

1736 
h‹zªsﬁuti⁄
;

1737 
magic
;

1738 
numbyãs
;

1739 
∂™es
;

1740 
ª£rved1
;

1741 
ª£rved2
;

1742 *
Ω¨øy
;

1743 
size
;

1744 
sizeofbôm≠
;

1745 
vîåesﬁuti⁄
;

1749 
fûe_ö
.
	`›í
 ( 
fûe_ö_«me
, 
ios
::
ö
 | ios::
bö¨y
 );

1751 i‡–!
fûe_ö
 )

1753 
îr‹
 = 
åue
;

1754 
cout
 << "\n";

1755 
cout
 << "BMP_READ - FatalÉrror!\n";

1756 
cout
 << " CouldÇot openÅhe input file.\n";

1757  
îr‹
;

1762 
îr‹
 = 
	`bmp_hódî1_ªad
 ( 
fûe_ö
, &
fûëy≥
, &
fûesize
, &
ª£rved1
,

1763 &
ª£rved2
, &
bôm≠off£t
 );

1765 i‡–
îr‹
 )

1767 
cout
 << "\n";

1768 
cout
 << "BMP_READ: FatalÉrror!\n";

1769 
cout
 << " BMP_HEADER1_READ failed.\n";

1770  
îr‹
;

1775 
magic
 = 'B' * 256 + 'M';

1777 i‡–
fûëy≥
 !
magic
 )

1779 
cout
 << "\n";

1780 
cout
 << "BMP_READ: FatalÉrror!\n";

1781 
cout
 << " The file's internal magicÇumber isÇot \"BM\".\n";

1782 
cout
 << " wôhÅhênumîi¯vÆuê" << 
magic
 << "\n";

1783 
cout
 << "\n";

1784 
cout
 << " Instead, it is \""

1785 << ( Ë–
fûëy≥
 / 256 )

1786 << ( Ë–
fûëy≥
 % 256 )

1788 
cout
 << " wôhÅhênumîi¯vÆuê" << 
fûëy≥
 << "\n";

1789 
cout
 << "\n";

1790 
cout
 << " (Perhaps youÇeedÅoÑeverseÅhe byte swapping option!)\n";

1796 
îr‹
 = 
	`bmp_hódî2_ªad
 ( 
fûe_ö
, &
size
, 
width
, 
height
, &
∂™es
,

1797 &
bô•îpixñ
, &
com¥essi⁄
, &
sizeofbôm≠
, &
h‹zªsﬁuti⁄
,

1798 &
vîåesﬁuti⁄
, &
cﬁ‹su£d
, &
cﬁ‹simp‹è¡
 );

1800 i‡–
îr‹
 )

1802 
cout
 << "\n";

1803 
cout
 << "BMP_READ: FatalÉrror!\n";

1804 
cout
 << " BMP_HEADER2_READ failed.\n";

1805  
îr‹
;

1810 i‡–0 < 
cﬁ‹su£d
 )

1812 
Ω¨øy
 = 
√w
 [
cﬁ‹su£d
];

1813 
g∑ºay
 = 
√w
 [
cﬁ‹su£d
];

1814 
b∑ºay
 = 
√w
 [
cﬁ‹su£d
];

1815 
≠¨øy
 = 
√w
 [
cﬁ‹su£d
];

1817 
îr‹
 = 
	`bmp_∑Àâe_ªad
 ( 
fûe_ö
, 
cﬁ‹su£d
, 
Ω¨øy
, 
g∑ºay
,

1818 
b∑ºay
, 
≠¨øy
 );

1820 i‡–
îr‹
 )

1822 
cout
 << "\n";

1823 
cout
 << "BMP_READ: FatalÉrror!\n";

1824 
cout
 << " BMP_PALETTE_READ failed.\n";

1825  
îr‹
;

1827 
dñëe
 [] 
Ω¨øy
;

1828 
dñëe
 [] 
g∑ºay
;

1829 
dñëe
 [] 
b∑ºay
;

1830 
dñëe
 [] 
≠¨øy
;

1835 
numbyãs
 = ( *
width
 ) * ( 
	`abs
 ( *
height
 ) ) *  ( );

1837 *
øºay
 = 
√w
 [
numbyãs
];

1838 *
g¨øy
 = 
√w
 [
numbyãs
];

1839 *
b¨øy
 = 
√w
 [
numbyãs
];

1843 i‡–
bô•îpixñ
 == 8 )

1845 
îr‹
 = 
	`bmp_08_d©a_ªad
 ( 
fûe_ö
, *
width
, *
height
, *
øºay
 );

1847 i‡–
îr‹
 )

1849 
cout
 << "\n";

1850 
cout
 << "BMP_READ: FatalÉrror!\n";

1851 
cout
 << " BMP_08_DATA_READ failed.\n";

1852  
îr‹
;

1855 *
g¨øy
 = *
øºay
;

1856 *
b¨øy
 = *
øºay
;

1858 i‡–
bô•îpixñ
 == 24 )

1860 
îr‹
 = 
	`bmp_24_d©a_ªad
 ( 
fûe_ö
, *
width
, *
height
, *
øºay
, *
g¨øy
,

1861 *
b¨øy
 );

1863 i‡–
îr‹
 )

1865 
cout
 << "\n";

1866 
cout
 << "BMP_READ: FatalÉrror!\n";

1867 
cout
 << " BMP_24_DATA_READ failed.\n";

1868  
îr‹
;

1873 
cout
 << "\n";

1874 
cout
 << "BMP_READ: FatalÉrror!\n";

1875 
cout
 << " Uƒecognized vÆuêo‡BITSPERPIXEL = " << 
bô•îpixñ
 << "\n";

1881 
fûe_ö
.
	`˛o£
 ( );

1883 
îr‹
 = 
Ál£
;

1884  
îr‹
;

1885 
	}
}

1888 
boﬁ
 
	$bmp_ªad_ã°
 ( c⁄° *
fûe_ö_«me
 )

1927 
	#VERBOSE
 
Ál£


	)

1929 *
b¨øy
;

1930 
boﬁ
 
îr‹
;

1931 *
g¨øy
;

1932 
height
;

1933 *
øºay
;

1934 
width
;

1936 
øºay
 = 
NULL
;

1937 
g¨øy
 = 
NULL
;

1938 
b¨øy
 = 
NULL
;

1942 
îr‹
 = 
	`bmp_ªad
 ( 
fûe_ö_«me
, &
width
, &
height
, &
øºay
, &
g¨øy
,

1943 &
b¨øy
 );

1947 
dñëe
 [] 
øºay
;

1948 
dñëe
 [] 
g¨øy
;

1949 
dñëe
 [] 
b¨øy
;

1951 i‡–
VERBOSE
 )

1953 i‡–
îr‹
 )

1955 
cout
 << "\n";

1956 
cout
 << "BMP_READ_TEST - FatalÉrror!\n";

1957 
cout
 << " TheÅest failed.\n";

1961 
cout
 << "\n";

1962 
cout
 << "BMP_READ_TEST:\n";

1963 
cout
 << " WIDTH = " << 
width
 << ".\n";

1964 
cout
 << " HEIGHT = " << 
height
 << ".\n";

1965 
cout
 << "\n";

1966 
cout
 << "BMP_READ_TEST:\n";

1967 
cout
 << " TheÅest was successful.\n";

1971  
îr‹
;

1972 #unde‡
VERBOSE


1973 
	}
}

1974 
boﬁ
 
	$bmp_wrôe
 ( c⁄° *
fûe_out_«me
, 
width
, 
height
,

1975 *
øºay
, *
g¨øy
, *
b¨øy
 ) {

1976  
	`bmp_24_wrôe
–
fûe_out_«me
, 
width
, 
height
, 
øºay
, 
g¨øy
, 
b¨øy
);

1977 
	}
}

1980 
boﬁ
 
	$bmp_08_wrôe
 ( c⁄° *
fûe_out_«me
, 
width
, 
height
,

1981 *
øºay
 )

2030 *
≠¨øy
 = 
NULL
;

2031 
bôm≠off£t
;

2032 
bô•îpixñ
;

2033 *
b∑ºay
 = 
NULL
;

2034 
cﬁ‹simp‹è¡
;

2035 
cﬁ‹su£d
;

2036 
com¥essi⁄
;

2037 
boﬁ
 
îr‹
;

2038 
of°ªam
 
fûe_out
;

2039 
fûesize
;

2040 
fûëy≥
;

2041 *
g∑ºay
 = 
NULL
;

2042 
h‹zªsﬁuti⁄
;

2043 
∑ddög
;

2044 
∂™es
;

2045 
ª£rved1
 = 0;

2046 
ª£rved2
 = 0;

2047 *
Ω¨øy
 = 
NULL
;

2048 
size
 = 40;

2049 
sizeofbôm≠
;

2050 
vîåesﬁuti⁄
;

2054 
fûe_out
.
	`›í
 ( 
fûe_out_«me
, 
ios
::
out
 | ios::
bö¨y
 );

2056 
îr‹
 = !
fûe_out
;

2058 i‡–
îr‹
 )

2060 
cout
 << "\n";

2061 
cout
 << "BMP_08_WRITE - FatalÉrror!\n";

2062 
cout
 << " CouldÇot openÅhe output file.\n";

2063  
îr‹
;

2068 i‡–
bmp_byã_sw≠
 )

2070 
fûëy≥
 = 'M' * 256 + 'B';

2074 
fûëy≥
 = 'B' * 256 + 'M';

2079 
∑ddög
 = ( 4 - ( ( 1 * 
width
 ) % 4 ) ) % 4;

2081 
fûesize
 = 54 + ( 
width
 + 
∑ddög
 ) * 
	`abs
 ( 
height
 );

2082 
bôm≠off£t
 = 54;

2084 
	`bmp_hódî1_wrôe
 ( 
fûe_out
, 
fûëy≥
, 
fûesize
, 
ª£rved1
,

2085 
ª£rved2
, 
bôm≠off£t
 );

2089 
∂™es
 = 1;

2090 
bô•îpixñ
 = 8;

2091 
com¥essi⁄
 = 0;

2092 
sizeofbôm≠
 = 0;

2093 
h‹zªsﬁuti⁄
 = 0;

2094 
vîåesﬁuti⁄
 = 0;

2095 
cﬁ‹su£d
 = 0;

2096 
cﬁ‹simp‹è¡
 = 0;

2098 
	`bmp_hódî2_wrôe
 ( 
fûe_out
, 
size
, 
width
, 
height
, 
∂™es
, 
bô•îpixñ
,

2099 
com¥essi⁄
, 
sizeofbôm≠
, 
h‹zªsﬁuti⁄
, 
vîåesﬁuti⁄
,

2100 
cﬁ‹su£d
, 
cﬁ‹simp‹è¡
 );

2104 
	`bmp_∑Àâe_wrôe
 ( 
fûe_out
, 
cﬁ‹su£d
, 
Ω¨øy
, 
g∑ºay
, 
b∑ºay
,

2105 
≠¨øy
 );

2109 
	`bmp_08_d©a_wrôe
 ( 
fûe_out
, 
width
, 
height
, 
øºay
 );

2113 
fûe_out
.
	`˛o£
 ( );

2115 
îr‹
 = 
Ál£
;

2116  
îr‹
;

2117 
	}
}

2120 
boﬁ
 
	$bmp_08_wrôe_ã°
 ( c⁄° *
fûe_out_«me
 )

2159 
	#VERBOSE
 
Ál£


	)

2161 
boﬁ
 
îr‹
;

2162 
height
;

2163 
i
;

2164 *
ödexr
;

2165 
j
;

2166 
numbyãs
;

2167 *
øºay
;

2168 
width
;

2170 
width
 = 255;

2171 
height
 = 255;

2175 
numbyãs
 = 
width
 * 
	`abs
 ( 
height
 ) *  ( );

2177 
øºay
 = 
√w
 [
numbyãs
];

2181 
ödexr
 = 
øºay
;

2183  
j
 = 0; j < 
height
; j++ )

2185  
i
 = 0; i < 
width
; i++ )

2187 *
ödexr
 = 
i
 % ( 
j
 + 1 );

2188 
ödexr
 = indexr + 1;

2194 
îr‹
 = 
	`bmp_08_wrôe
 ( 
fûe_out_«me
, 
width
, 
height
, 
øºay
 );

2196 i‡–
îr‹
 )

2198 
cout
 << "\n";

2199 
cout
 << "BMP_08_WRITE_TEST - FatalÉrror!\n";

2200 
cout
 << " TheÅest failed.\n";

2201  
îr‹
;

2206 
dñëe
 [] 
øºay
;

2208 i‡–
VERBOSE
 )

2210 
cout
 << "\n";

2211 
cout
 << "BMP_08_WRITE_TEST:\n";

2212 
cout
 << " TheÅest was successful.\n";

2215 
îr‹
 = 
Ál£
;

2216  
îr‹
;

2217 #unde‡
VERBOSE


2218 
	}
}

2221 
boﬁ
 
	$bmp_24_wrôe
 ( c⁄° *
fûe_out_«me
, 
width
, 
height
,

2222 *
øºay
, *
g¨øy
, *
b¨øy
 )

2279 *
≠¨øy
 = 
NULL
;

2280 
bôm≠off£t
;

2281 
bô•îpixñ
;

2282 *
b∑ºay
 = 
NULL
;

2283 
cﬁ‹simp‹è¡
;

2284 
cﬁ‹su£d
;

2285 
com¥essi⁄
;

2286 
boﬁ
 
îr‹
;

2287 
of°ªam
 
fûe_out
;

2288 
fûesize
;

2289 
fûëy≥
;

2290 *
g∑ºay
 = 
NULL
;

2291 
h‹zªsﬁuti⁄
;

2292 
∑ddög
;

2293 
∂™es
;

2294 
ª£rved1
 = 0;

2295 
ª£rved2
 = 0;

2296 *
Ω¨øy
 = 
NULL
;

2297 
size
 = 40;

2298 
sizeofbôm≠
;

2299 
vîåesﬁuti⁄
;

2303 
fûe_out
.
	`›í
 ( 
fûe_out_«me
, 
ios
::
out
 | ios::
bö¨y
 );

2305 
îr‹
 = !
fûe_out
;

2307 i‡–
îr‹
 )

2309 
cout
 << "\n";

2310 
cout
 << "BMP_24_WRITE - FatalÉrror!\n";

2311 
cout
 << " CouldÇot openÅhe output file.\n";

2312  
îr‹
;

2317 i‡–
bmp_byã_sw≠
 )

2319 
fûëy≥
 = 'M' * 256 + 'B';

2323 
fûëy≥
 = 'B' * 256 + 'M';

2328 
∑ddög
 = ( 4 - ( ( 3 * 
width
 ) % 4 ) ) % 4;

2330 
fûesize
 = 54 + ( ( 3 * 
width
 ) + 
∑ddög
 ) * 
	`abs
 ( 
height
 );

2331 
bôm≠off£t
 = 54;

2333 
	`bmp_hódî1_wrôe
 ( 
fûe_out
, 
fûëy≥
, 
fûesize
, 
ª£rved1
,

2334 
ª£rved2
, 
bôm≠off£t
 );

2338 
∂™es
 = 1;

2339 
bô•îpixñ
 = 24;

2340 
com¥essi⁄
 = 0;

2341 
sizeofbôm≠
 = 0;

2342 
h‹zªsﬁuti⁄
 = 0;

2343 
vîåesﬁuti⁄
 = 0;

2344 
cﬁ‹su£d
 = 0;

2345 
cﬁ‹simp‹è¡
 = 0;

2347 
	`bmp_hódî2_wrôe
 ( 
fûe_out
, 
size
, 
width
, 
height
, 
∂™es
, 
bô•îpixñ
,

2348 
com¥essi⁄
, 
sizeofbôm≠
, 
h‹zªsﬁuti⁄
, 
vîåesﬁuti⁄
,

2349 
cﬁ‹su£d
, 
cﬁ‹simp‹è¡
 );

2353 
	`bmp_∑Àâe_wrôe
 ( 
fûe_out
, 
cﬁ‹su£d
, 
Ω¨øy
, 
g∑ºay
, 
b∑ºay
,

2354 
≠¨øy
 );

2358 
	`bmp_24_d©a_wrôe
 ( 
fûe_out
, 
width
, 
height
, 
øºay
, 
g¨øy
, 
b¨øy
 );

2362 
fûe_out
.
	`˛o£
 ( );

2364 
îr‹
 = 
Ál£
;

2365  
îr‹
;

2366 
	}
}

2369 
boﬁ
 
	$bmp_24_wrôe_ã°
 ( c⁄° *
fûe_out_«me
 )

2408 
	#VERBOSE
 
Ál£


	)

2410 *
b¨øy
;

2411 
boﬁ
 
îr‹
;

2412 *
g¨øy
;

2413 
height
;

2414 
i
;

2415 *
ödexb
;

2416 *
ödexg
;

2417 *
ödexr
;

2418 
j
;

2419 
j2
;

2420 
numbyãs
;

2421 *
øºay
;

2422 
width
;

2424 
width
 = 200;

2425 
height
 = 200;

2429 
numbyãs
 = 
width
 * 
	`abs
 ( 
height
 ) *  ( );

2431 
øºay
 = 
√w
 [
numbyãs
];

2432 
g¨øy
 = 
√w
 [
numbyãs
];

2433 
b¨øy
 = 
√w
 [
numbyãs
];

2439 
ödexr
 = 
øºay
;

2440 
ödexg
 = 
g¨øy
;

2441 
ödexb
 = 
b¨øy
;

2443  
j2
 = 0; j2 < 
	`abs
 ( 
height
 ); j2++ )

2445 
j
 = 
	`abs
 ( 
height
 ) - 
j2
;

2446  
i
 = 0; i < 
width
; i++ )

2448 i‡–
i
 <
j
 )

2450 *
ödexr
 = 255;

2451 *
ödexg
 = 0;

2452 *
ödexb
 = 0;

2454 i‡––
width
 - 1 ) * 
j
 + ( 
	`abs
 ( 
height
 ) - 1 ) * 
i
 <=

2455 –
width
 - 1 ) * ( 
	`abs
 ( 
height
 ) - 1 ) )

2457 *
ödexr
 = 0;

2458 *
ödexg
 = 255;

2459 *
ödexb
 = 0;

2463 *
ödexr
 = 0;

2464 *
ödexg
 = 0;

2465 *
ödexb
 = 255;

2467 
ödexr
 = indexr + 1;

2468 
ödexg
 = indexg + 1;

2469 
ödexb
 = indexb + 1;

2475 
îr‹
 = 
	`bmp_24_wrôe
 ( 
fûe_out_«me
, 
width
, 
height
, 
øºay
, 
g¨øy
, 
b¨øy
 );

2477 i‡–
îr‹
 )

2479 
cout
 << "\n";

2480 
cout
 << "BMP_24_WRITE_TEST - FatalÉrror!\n";

2481 
cout
 << " TheÅest failed.\n";

2482  
îr‹
;

2487 
dñëe
 [] 
øºay
;

2488 
dñëe
 [] 
g¨øy
;

2489 
dñëe
 [] 
b¨øy
;

2491 i‡–
VERBOSE
 )

2493 
cout
 << "\n";

2494 
cout
 << "BMP_24_WRITE_TEST:\n";

2495 
cout
 << " TheÅest was successful.\n";

2498 
îr‹
 = 
Ál£
;

2499  
îr‹
;

2500 #unde‡
VERBOSE


2501 
	}
}

2504 
boﬁ
 
	$l⁄g_öt_ªad
 ( *
l⁄g_öt_vÆ
, 
if°ªam
 &
fûe_ö
 )

2529 
boﬁ
 
îr‹
;

2530 
u_sh‹t_öt_vÆ_hi
;

2531 
u_sh‹t_öt_vÆ_lo
;

2533 i‡–
bmp_byã_sw≠
 )

2535 
îr‹
 = 
	`u_sh‹t_öt_ªad
 ( &
u_sh‹t_öt_vÆ_lo
, 
fûe_ö
 );

2536 i‡–
îr‹
 )

2538  
îr‹
;

2540 
îr‹
 = 
	`u_sh‹t_öt_ªad
 ( &
u_sh‹t_öt_vÆ_hi
, 
fûe_ö
 );

2541 i‡–
îr‹
 )

2543  
îr‹
;

2548 
îr‹
 = 
	`u_sh‹t_öt_ªad
 ( &
u_sh‹t_öt_vÆ_hi
, 
fûe_ö
 );

2549 i‡–
îr‹
 )

2551  
îr‹
;

2553 
îr‹
 = 
	`u_sh‹t_öt_ªad
 ( &
u_sh‹t_öt_vÆ_lo
, 
fûe_ö
 );

2554 i‡–
îr‹
 )

2556  
îr‹
;

2560 *
l⁄g_öt_vÆ
 = ( )

2561 –
u_sh‹t_öt_vÆ_hi
 << 16 ) | 
u_sh‹t_öt_vÆ_lo
;

2563  
Ál£
;

2564 
	}
}

2567 
	$l⁄g_öt_wrôe
 ( 
l⁄g_öt_vÆ
, 
of°ªam
 &
fûe_out
 )

2590 
ãmp
;

2591 
u_sh‹t_öt_vÆ_hi
;

2592 
u_sh‹t_öt_vÆ_lo
;

2594 
ãmp
 = 
l⁄g_öt_vÆ
 / 65536;

2595 i‡–
ãmp
 < 0 )

2597 
ãmp
 =Åemp + 65536;

2599 
u_sh‹t_öt_vÆ_hi
 = ( Ë
ãmp
;

2601 
ãmp
 = 
l⁄g_öt_vÆ
 % 65536;

2602 i‡–
ãmp
 < 0 )

2604 
ãmp
 =Åemp + 65536;

2606 
u_sh‹t_öt_vÆ_lo
 = ( Ë
ãmp
;

2608 i‡–
bmp_byã_sw≠
 )

2610 
	`u_sh‹t_öt_wrôe
 ( 
u_sh‹t_öt_vÆ_lo
, 
fûe_out
 );

2611 
	`u_sh‹t_öt_wrôe
 ( 
u_sh‹t_öt_vÆ_hi
, 
fûe_out
 );

2615 
	`u_sh‹t_öt_wrôe
 ( 
u_sh‹t_öt_vÆ_hi
, 
fûe_out
 );

2616 
	`u_sh‹t_öt_wrôe
 ( 
u_sh‹t_öt_vÆ_lo
, 
fûe_out
 );

2620 
	}
}

2623 
boﬁ
 
	$u_l⁄g_öt_ªad
 ( *
u_l⁄g_öt_vÆ
,

2624 
if°ªam
 &
fûe_ö
 )

2649 
boﬁ
 
îr‹
;

2650 
u_sh‹t_öt_vÆ_hi
;

2651 
u_sh‹t_öt_vÆ_lo
;

2653 i‡–
bmp_byã_sw≠
 )

2655 
îr‹
 = 
	`u_sh‹t_öt_ªad
 ( &
u_sh‹t_öt_vÆ_lo
, 
fûe_ö
 );

2656 i‡–
îr‹
 )

2658  
îr‹
;

2660 
îr‹
 = 
	`u_sh‹t_öt_ªad
 ( &
u_sh‹t_öt_vÆ_hi
, 
fûe_ö
 );

2661 i‡–
îr‹
 )

2663  
îr‹
;

2668 
îr‹
 = 
	`u_sh‹t_öt_ªad
 ( &
u_sh‹t_öt_vÆ_hi
, 
fûe_ö
 );

2669 i‡–
îr‹
 )

2671  
îr‹
;

2673 
îr‹
 = 
	`u_sh‹t_öt_ªad
 ( &
u_sh‹t_öt_vÆ_lo
, 
fûe_ö
 );

2674 i‡–
îr‹
 )

2676  
îr‹
;

2686 *
u_l⁄g_öt_vÆ
 = ( 
u_sh‹t_öt_vÆ_hi
 << 16 ) | 
u_sh‹t_öt_vÆ_lo
;

2688  
Ál£
;

2689 
	}
}

2692 
	$u_l⁄g_öt_wrôe
 ( 
u_l⁄g_öt_vÆ
,

2693 
of°ªam
 &
fûe_out
 )

2716 
u_sh‹t_öt_vÆ_hi
;

2717 
u_sh‹t_öt_vÆ_lo
;

2719 
u_sh‹t_öt_vÆ_hi
 = ( Ë–
u_l⁄g_öt_vÆ
 / 65536 );

2720 
u_sh‹t_öt_vÆ_lo
 = ( Ë–
u_l⁄g_öt_vÆ
 % 65536 );

2722 i‡–
bmp_byã_sw≠
 )

2724 
	`u_sh‹t_öt_wrôe
 ( 
u_sh‹t_öt_vÆ_lo
, 
fûe_out
 );

2725 
	`u_sh‹t_öt_wrôe
 ( 
u_sh‹t_öt_vÆ_hi
, 
fûe_out
 );

2729 
	`u_sh‹t_öt_wrôe
 ( 
u_sh‹t_öt_vÆ_hi
, 
fûe_out
 );

2730 
	`u_sh‹t_öt_wrôe
 ( 
u_sh‹t_öt_vÆ_lo
, 
fûe_out
 );

2734 
	}
}

2737 
boﬁ
 
	$u_sh‹t_öt_ªad
 ( *
u_sh‹t_öt_vÆ
,

2738 
if°ªam
 &
fûe_ö
 )

2763 
c
;

2764 
chi
;

2765 
˛o
;

2767 i‡–
bmp_byã_sw≠
 )

2769 
fûe_ö
.
	`ªad
 ( &
c
, 1 );

2770 i‡–
fûe_ö
.
	`eof
() )

2772  
åue
;

2774 
˛o
 = ( Ë
c
;

2776 
fûe_ö
.
	`ªad
 ( &
c
, 1 );

2777 i‡–
fûe_ö
.
	`eof
() )

2779  
åue
;

2781 
chi
 = ( Ë
c
;

2785 
fûe_ö
.
	`ªad
 ( &
c
, 1 );

2786 i‡–
fûe_ö
.
	`eof
() )

2788  
åue
;

2790 
chi
 = ( Ë
c
;

2792 
fûe_ö
.
	`ªad
 ( &
c
, 1 );

2793 i‡–
fûe_ö
.
	`eof
() )

2795  
åue
;

2797 
˛o
 = ( Ë
c
;

2800 *
u_sh‹t_öt_vÆ
 = ( 
chi
 << 8 ) | 
˛o
;

2802  
Ál£
;

2803 
	}
}

2806 
	$u_sh‹t_öt_wrôe
 ( 
u_sh‹t_öt_vÆ
,

2807 
of°ªam
 &
fûe_out
 )

2830 
chi
;

2831 
˛o
;

2833 
chi
 = ( Ë–
u_sh‹t_öt_vÆ
 / 256 );

2834 
˛o
 = ( Ë–
u_sh‹t_öt_vÆ
 % 256 );

2836 i‡–
bmp_byã_sw≠
 )

2838 
fûe_out
 << 
˛o
 << 
chi
;

2842 
fûe_out
 << 
chi
 << 
˛o
;

2846 
	}
}

	@bmp_io.h

1 #i‚de‡
_BMP_IO_H_


2 
	#_BMP_IO_H_


	)

4 
	~<f°ªam
>

6 
boﬁ
 
bmp_byã_sw≠_gë
 ( );

7 
bmp_byã_sw≠_£t
 ( 
boﬁ
 
vÆue
 );

9 
boﬁ
 
bmp_08_d©a_ªad
 ( 
°d
::
if°ªam
 &
fûe_ö
, 
width
, 
height
,

10 *
øºay
 );

11 
bmp_08_d©a_wrôe
 ( 
°d
::
of°ªam
 &
fûe_out
, 
width
,

12 
height
, *
øºay
 );

14 
boﬁ
 
bmp_24_d©a_ªad
 ( 
°d
::
if°ªam
 &
fûe_ö
, 
width
,

15 
height
, *
øºay
, *
g¨øy
, *
b¨øy
 );

16 
bmp_24_d©a_wrôe
 ( 
°d
::
of°ªam
 &
fûe_out
, 
width
,

17 
height
, *
øºay
, *
g¨øy
, *
b¨øy
 );

19 
bmp_hódî1_¥öt
 ( 
fûëy≥
,

20 
fûesize
, 
ª£rved1
,

21 
ª£rved2
, 
bôm≠off£t
 );

22 
boﬁ
 
bmp_hódî1_ªad
 ( 
°d
::
if°ªam
 &
fûe_ö
, *
fûëy≥
,

23 *
fûesize
, *
ª£rved1
,

24 *
ª£rved2
, *
bôm≠off£t
 );

25 
bmp_hódî1_wrôe
 ( 
°d
::
of°ªam
 &
fûe_out
, 
fûëy≥
,

26 
fûesize
, 
ª£rved1
,

27 
ª£rved2
, 
bôm≠off£t
 );

29 
bmp_hódî2_¥öt
 ( 
size
, 
width
,

30 
height
,

31 
∂™es
, 
bô•îpixñ
,

32 
com¥essi⁄
, 
sizeofbôm≠
,

33 
h‹zªsﬁuti⁄
, 
vîåesﬁuti⁄
,

34 
cﬁ‹su£d
, 
cﬁ‹simp‹è¡
 );

35 
boﬁ
 
bmp_hódî2_ªad
 ( 
°d
::
if°ªam
 &
fûe_ö
, *
size
,

36 *
width
, *
height
,

37 *
∂™es
, *
bô•îpixñ
,

38 *
com¥essi⁄
, *
sizeofbôm≠
,

39 *
h‹zªsﬁuti⁄
, *
vîåesﬁuti⁄
,

40 *
cﬁ‹su£d
, *
cﬁ‹simp‹è¡
 );

41 
bmp_hódî2_wrôe
 ( 
°d
::
of°ªam
 &
fûe_out
, 
size
,

42 
width
, 
height
,

43 
∂™es
, 
bô•îpixñ
,

44 
com¥essi⁄
, 
sizeofbôm≠
,

45 
h‹zªsﬁuti⁄
, 
vîåesﬁuti⁄
,

46 
cﬁ‹su£d
, 
cﬁ‹simp‹è¡
 );

48 
bmp_∑Àâe_¥öt
 ( 
cﬁ‹su£d
,

49 *
Ω¨øy
, *
g∑ºay
, *
b∑ºay
,

50 *
≠¨øy
 );

51 
boﬁ
 
bmp_∑Àâe_ªad
 ( 
°d
::
if°ªam
 &
fûe_ö
, 
cﬁ‹su£d
,

52 *
Ω¨øy
, *
g∑ºay
, *
b∑ºay
,

53 *
≠¨øy
 );

54 
bmp_∑Àâe_wrôe
 ( 
°d
::
of°ªam
 &
fûe_out
, 
cﬁ‹su£d
,

55 *
Ω¨øy
, *
g∑ºay
, *
b∑ºay
,

56 *
≠¨øy
 );

58 
boﬁ
 
bmp_¥öt_ã°
 ( c⁄° *
fûe_ö_«me
 );

60 
boﬁ
 
bmp_ªad
 ( c⁄° *
fûe_ö_«me
, *
width
, *
height
,

61 **
øºay
, **
g¨øy
, **
b¨øy
 );

62 
boﬁ
 
bmp_ªad_ã°
 ( c⁄° *
fûe_ö_«me
 );

64 
boﬁ
 
bmp_wrôe
 ( c⁄° *
fûe_out_«me
, 
width
, 
height
,

65 *
øºay
, *
g¨øy
, *
b¨øy
 );

67 
boﬁ
 
bmp_08_wrôe
 ( c⁄° *
fûe_out_«me
, 
width
, 
height
,

68 *
øºay
, *
g¨øy
, *
b¨øy
 );

69 
boﬁ
 
bmp_08_wrôe_ã°
 ( c⁄° *
fûe_out_«me
 );

71 
boﬁ
 
bmp_24_wrôe
 ( c⁄° *
fûe_out_«me
, 
width
, 
height
,

72 *
øºay
, *
g¨øy
, *
b¨øy
 );

73 
boﬁ
 
bmp_24_wrôe_ã°
 ( c⁄° *
fûe_out_«me
 );

75 
boﬁ
 
l⁄g_öt_ªad
 ( *
l⁄g_öt_vÆ
, 
°d
::
if°ªam
 &
fûe_ö
 );

76 
l⁄g_öt_wrôe
 ( 
l⁄g_öt_vÆ
, 
°d
::
of°ªam
 &
fûe_out
 );

78 
boﬁ
 
u_l⁄g_öt_ªad
 ( *
u_l⁄g_öt_vÆ
, 
°d
::
if°ªam
 &
fûe_ö
 );

79 
u_l⁄g_öt_wrôe
 ( 
u_l⁄g_öt_vÆ
, 
°d
::
of°ªam
 &
fûe_out
 );

81 
boﬁ
 
u_sh‹t_öt_ªad
 ( *
u_sh‹t_öt_vÆ
, 
°d
::
if°ªam
 &
fûe_ö
 );

82 
u_sh‹t_öt_wrôe
 ( 
u_sh‹t_öt_vÆ
, 
°d
::
of°ªam
 &
fûe_out
 );

	@light_source.cpp

11 
	~<cm©h
>

12 
	~"light_sour˚.h
"

14 
	gPoötLight
::
	$shade
–
Ray3D
& 
øy
 ) {

23 
	}
}

	@light_source.h

11 
	~"utû.h
"

17 ˛as†
	cLightSour˚
 {

18 
	mpublic
:

19 
vútuÆ
 
shade
–
Ray3D
& ) = 0;

20 
vútuÆ
 
Poöt3D
 
	$gë_posôi⁄
() const = 0;

25 ˛as†
	cPoötLight
 : 
public
 
LightSour˚
 {

26 
public
:

27 
	$PoötLight
–
Poöt3D
 
pos
, 
Cﬁour
 
cﬁ
 ) : 
	`_pos
’os), 
	`_cﬁ_ambõ¡
(col),

28 
	`_cﬁ_diffu£
(
cﬁ
), 
	$_cﬁ_•ecuœr
(
cﬁ
) {}

29 
	$PoötLight
–
Poöt3D
 
pos
, 
Cﬁour
 
ambõ¡
, Cﬁou∏
diffu£
, Cﬁou∏
•ecuœr
 )

30 : 
	`_pos
(
pos
), 
	`_cﬁ_ambõ¡
(
ambõ¡
), 
	`_cﬁ_diffu£
(
diffu£
),

31 
	$_cﬁ_•ecuœr
(
•ecuœr
Ë{
	}
}

32 
shade
–
Ray3D
& 
øy
 );

33 
Poöt3D
 
	$gë_posôi⁄
(Ëc⁄° {  
_pos
; 
	}
}

35 
	g¥iv©e
:

36 
Poöt3D
 
_pos
;

37 
Cﬁour
 
	g_cﬁ_ambõ¡
;

38 
Cﬁour
 
	g_cﬁ_diffu£
;

39 
Cﬁour
 
	g_cﬁ_•ecuœr
;

	@main.cpp

10 
	~"øyåa˚r.h
"

11 
	~<c°dlib
>

13 
	$maö
(
¨gc
, * 
¨gv
[])

20 
Rayåa˚r
 
øyåa˚r
;

21 
width
 = 320;

22 
height
 = 240;

24 i‡(
¨gc
 == 3) {

25 
width
 = 
	`©oi
(
¨gv
[1]);

26 
height
 = 
	`©oi
(
¨gv
[2]);

30 
Poöt3D
 
	`eye
(0, 0, 1);

31 
Ve˘‹3D
 
	`võw
(0, 0, -1);

32 
Ve˘‹3D
 
	`up
(0, 1, 0);

33 
fov
 = 60;

36 
M©îül
 
	`gﬁd
(
	`Cﬁour
(0.3, 0.3, 0.3), Colour(0.75164, 0.60648, 0.22648),

37 
	`Cﬁour
(0.628281, 0.555802, 0.366065),

39 
M©îül
 
	`jade
(
	`Cﬁour
(0, 0, 0), Colour(0.54, 0.89, 0.63),

40 
	`Cﬁour
(0.316228, 0.316228, 0.316228),

44 
øyåa˚r
.
	`addLightSour˚
(
√w
 
	`PoötLight
(
	`Poöt3D
(0, 0, 5),

45 
	`Cﬁour
(0.9, 0.9, 0.9)));

48 
S˚√DagNode
* 
•hîe
 = 
øyåa˚r
.
	`addObje˘
(
√w
 
	`UnôSphîe
(), &
gﬁd
);

49 
S˚√DagNode
* 
∂™e
 = 
øyåa˚r
.
	`addObje˘
(
√w
 
	`UnôSqu¨e
(), &
jade
);

52 
Á˘‹1
[3] = { 1.0, 2.0, 1.0 };

53 
Á˘‹2
[3] = { 6.0, 6.0, 6.0 };

54 
øyåa˚r
.
	`å™¶©e
(
•hîe
, 
	`Ve˘‹3D
(0, 0, -5));

55 
øyåa˚r
.
	`rŸ©e
(
•hîe
, 'x', -45);

56 
øyåa˚r
.
	`rŸ©e
(
•hîe
, 'z', 45);

57 
øyåa˚r
.
	`sˇÀ
(
•hîe
, 
	`Poöt3D
(0, 0, 0), 
Á˘‹1
);

59 
øyåa˚r
.
	`å™¶©e
(
∂™e
, 
	`Ve˘‹3D
(0, 0, -7));

60 
øyåa˚r
.
	`rŸ©e
(
∂™e
, 'z', 45);

61 
øyåa˚r
.
	`sˇÀ
(
∂™e
, 
	`Poöt3D
(0, 0, 0), 
Á˘‹2
);

65 
øyåa˚r
.
	`ªndî
(
width
, 
height
, 
eye
, 
võw
, 
up
, 
fov
, "view1.bmp");

68 
Poöt3D
 
	`eye2
(4, 2, 1);

69 
Ve˘‹3D
 
	`võw2
(-4, -2, -6);

70 
øyåa˚r
.
	`ªndî
(
width
, 
height
, 
eye2
, 
võw2
, 
up
, 
fov
, "view2.bmp");

73 
	}
}

	@raytracer.cpp

14 
	~"øyåa˚r.h
"

15 
	~"bmp_io.h
"

16 
	~<cm©h
>

17 
	~<io°ªam
>

18 
	~<c°dlib
>

20 
	gRayåa˚r
::
	$Rayåa˚r
(Ë: 
	$_lightSour˚
(
NULL
) {

21 
_roŸ
 = 
√w
 
	`S˚√DagNode
();

22 
	}
}

24 
	gRayåa˚r
::~
	$Rayåa˚r
() {

25 
dñëe
 
_roŸ
;

26 
	}
}

28 
S˚√DagNode
* 
	gRayåa˚r
::
	$addObje˘
–
S˚√DagNode
* 
∑ª¡
,

29 
S˚√Obje˘
* 
obj
, 
M©îül
* 
m©
 ) {

30 
S˚√DagNode
* 
node
 = 
√w
 
	`S˚√DagNode
–
obj
, 
m©
 );

31 
node
->
∑ª¡
 =Öarent;

32 
node
->
√xt
 = 
NULL
;

33 
node
->
chûd
 = 
NULL
;

38 i‡(
∑ª¡
->
chûd
 =
NULL
) {

39 
∑ª¡
->
chûd
 = 
node
;

42 
∑ª¡
 =Ö¨ít->
chûd
;

43 
∑ª¡
->
√xt
 !
NULL
) {

44 
∑ª¡
 =Ö¨ít->
√xt
;

46 
∑ª¡
->
√xt
 = 
node
;

49  
node
;;

50 
	}
}

52 
LightLi°Node
* 
	gRayåa˚r
::
	$addLightSour˚
–
LightSour˚
* 
light
 ) {

53 
LightLi°Node
* 
tmp
 = 
_lightSour˚
;

54 
_lightSour˚
 = 
√w
 
	`LightLi°Node
–
light
, 
tmp
 );

55  
_lightSour˚
;

56 
	}
}

58 
	gRayåa˚r
::
	$rŸ©e
–
S˚√DagNode
* 
node
, 
axis
, 
™gÀ
 ) {

59 
M©rix4x4
 
rŸ©i⁄
;

60 
toRadün
 = 2*
M_PI
/360.0;

61 
i
;

63 
i
 = 0; i < 2; i++) {

64 
axis
) {

66 
rŸ©i⁄
[0][0] = 1;

67 
rŸ©i⁄
[1][1] = 
	`cos
(
™gÀ
*
toRadün
);

68 
rŸ©i⁄
[1][2] = -
	`sö
(
™gÀ
*
toRadün
);

69 
rŸ©i⁄
[2][1] = 
	`sö
(
™gÀ
*
toRadün
);

70 
rŸ©i⁄
[2][2] = 
	`cos
(
™gÀ
*
toRadün
);

71 
rŸ©i⁄
[3][3] = 1;

74 
rŸ©i⁄
[0][0] = 
	`cos
(
™gÀ
*
toRadün
);

75 
rŸ©i⁄
[0][2] = 
	`sö
(
™gÀ
*
toRadün
);

76 
rŸ©i⁄
[1][1] = 1;

77 
rŸ©i⁄
[2][0] = -
	`sö
(
™gÀ
*
toRadün
);

78 
rŸ©i⁄
[2][2] = 
	`cos
(
™gÀ
*
toRadün
);

79 
rŸ©i⁄
[3][3] = 1;

82 
rŸ©i⁄
[0][0] = 
	`cos
(
™gÀ
*
toRadün
);

83 
rŸ©i⁄
[0][1] = -
	`sö
(
™gÀ
*
toRadün
);

84 
rŸ©i⁄
[1][0] = 
	`sö
(
™gÀ
*
toRadün
);

85 
rŸ©i⁄
[1][1] = 
	`cos
(
™gÀ
*
toRadün
);

86 
rŸ©i⁄
[2][2] = 1;

87 
rŸ©i⁄
[3][3] = 1;

90 i‡(
i
 == 0) {

91 
node
->
å™s
 =Çode->å™s*
rŸ©i⁄
;

92 
™gÀ
 = -angle;

95 
node
->
övå™s
 = 
rŸ©i⁄
*node->invtrans;

98 
	}
}

100 
	gRayåa˚r
::
	$å™¶©e
–
S˚√DagNode
* 
node
, 
Ve˘‹3D
 
å™s
 ) {

101 
M©rix4x4
 
å™¶©i⁄
;

103 
å™¶©i⁄
[0][3] = 
å™s
[0];

104 
å™¶©i⁄
[1][3] = 
å™s
[1];

105 
å™¶©i⁄
[2][3] = 
å™s
[2];

106 
node
->
å™s
 =Çode->å™s*
å™¶©i⁄
;

107 
å™¶©i⁄
[0][3] = -
å™s
[0];

108 
å™¶©i⁄
[1][3] = -
å™s
[1];

109 
å™¶©i⁄
[2][3] = -
å™s
[2];

110 
node
->
övå™s
 = 
å™¶©i⁄
*node->invtrans;

111 
	}
}

113 
	gRayåa˚r
::
	$sˇÀ
–
S˚√DagNode
* 
node
, 
Poöt3D
 
‹igö
, 
Á˘‹
[3] ) {

114 
M©rix4x4
 
sˇÀ
;

116 
sˇÀ
[0][0] = 
Á˘‹
[0];

117 
sˇÀ
[0][3] = 
‹igö
[0] - 
Á˘‹
[0] * origin[0];

118 
sˇÀ
[1][1] = 
Á˘‹
[1];

119 
sˇÀ
[1][3] = 
‹igö
[1] - 
Á˘‹
[1] * origin[1];

120 
sˇÀ
[2][2] = 
Á˘‹
[2];

121 
sˇÀ
[2][3] = 
‹igö
[2] - 
Á˘‹
[2] * origin[2];

122 
node
->
å™s
 =Çode->å™s*
sˇÀ
;

123 
sˇÀ
[0][0] = 1/
Á˘‹
[0];

124 
sˇÀ
[0][3] = 
‹igö
[0] - 1/
Á˘‹
[0] * origin[0];

125 
sˇÀ
[1][1] = 1/
Á˘‹
[1];

126 
sˇÀ
[1][3] = 
‹igö
[1] - 1/
Á˘‹
[1] * origin[1];

127 
sˇÀ
[2][2] = 1/
Á˘‹
[2];

128 
sˇÀ
[2][3] = 
‹igö
[2] - 1/
Á˘‹
[2] * origin[2];

129 
node
->
övå™s
 = 
sˇÀ
*node->invtrans;

130 
	}
}

132 
M©rix4x4
 
	gRayåa˚r
::
	$öôInvVõwM©rix
–
Poöt3D
 
eye
, 
Ve˘‹3D
 
võw
,

133 
Ve˘‹3D
 
up
 ) {

134 
M©rix4x4
 
m©
;

135 
Ve˘‹3D
 
w
;

136 
võw
.
	`n‹mÆize
();

137 
up
 = u∞- up.
	`dŸ
(
võw
)*view;

138 
up
.
	`n‹mÆize
();

139 
w
 = 
võw
.
	`¸oss
(
up
);

141 
m©
[0][0] = 
w
[0];

142 
m©
[1][0] = 
w
[1];

143 
m©
[2][0] = 
w
[2];

144 
m©
[0][1] = 
up
[0];

145 
m©
[1][1] = 
up
[1];

146 
m©
[2][1] = 
up
[2];

147 
m©
[0][2] = -
võw
[0];

148 
m©
[1][2] = -
võw
[1];

149 
m©
[2][2] = -
võw
[2];

150 
m©
[0][3] = 
eye
[0];

151 
m©
[1][3] = 
eye
[1];

152 
m©
[2][3] = 
eye
[2];

154  
m©
;

155 
	}
}

158 
	gRayåa˚r
::
	$compuãTønsf‹ms
–
S˚√DagNode
* 
node
 )

160 
S˚√DagNode
 *
chûdPå
;

161 i‡(
node
->
∑ª¡
 !
NULL
 )

163 
node
->
modñToW‹ld
 =Çode->
∑ª¡
->modñToW‹ld*node->
å™s
;

164 
node
->
w‹ldToModñ
 =Çode->
övå™s
*node->
∑ª¡
->worldToModel;

168 
node
->
modñToW‹ld
 =Çode->
å™s
;

169 
node
->
w‹ldToModñ
 =Çode->
övå™s
;

172 
chûdPå
 = 
node
->
chûd
;

173 
chûdPå
 !
NULL
) {

174 
	`compuãTønsf‹ms
(
chûdPå
);

175 
chûdPå
 = chûdPå->
√xt
;

180 
	}
}

182 
	gRayåa˚r
::
	$åavî£S˚√
–
S˚√DagNode
* 
node
, 
Ray3D
& 
øy
 ) {

183 
S˚√DagNode
 *
chûdPå
;

187 i‡(
node
->
obj
) {

189 i‡(
node
->
obj
->
	`öãr£˘
(
øy
,Çode->
w‹ldToModñ
,Çode->
modñToW‹ld
)) {

190 
øy
.
öãr£˘i⁄
.
m©
 = 
node
->mat;

194 
chûdPå
 = 
node
->
chûd
;

195 
chûdPå
 !
NULL
) {

196 
	`åavî£S˚√
(
chûdPå
, 
øy
);

197 
chûdPå
 = chûdPå->
√xt
;

200 
	}
}

202 
	gRayåa˚r
::
	$compuãShadög
–
Ray3D
& 
øy
 ) {

203 
LightLi°Node
* 
curLight
 = 
_lightSour˚
;

205 i‡(
curLight
 =
NULL
) ;

210 
curLight
->
light
->
	`shade
(
øy
);

211 
curLight
 = curLight->
√xt
;

213 
	}
}

215 
	gRayåa˚r
::
	$öôPixñBuf„r
() {

216 
numbyãs
 = 
_s¸Width
 * 
_s¸Height
 * ();

217 
_rbuf„r
 = 
√w
 [
numbyãs
];

218 
°d
::
	`fûl_n
(
_rbuf„r
, 
numbyãs
,0);

219 
_gbuf„r
 = 
√w
 [
numbyãs
];

220 
°d
::
	`fûl_n
(
_gbuf„r
, 
numbyãs
,0);

221 
_bbuf„r
 = 
√w
 [
numbyãs
];

222 
°d
::
	`fûl_n
(
_bbuf„r
, 
numbyãs
,0);

223 
	}
}

225 
	gRayåa˚r
::
	$ÊushPixñBuf„r
–
°d
::
°rög
 
fûe_«me
 ) {

226 
	`bmp_wrôe
–
fûe_«me
.
	`c_°r
(), 
_s¸Width
, 
_s¸Height
, 
_rbuf„r
, 
_gbuf„r
, 
_bbuf„r
 );

227 
dñëe
 
_rbuf„r
;

228 
dñëe
 
_gbuf„r
;

229 
dñëe
 
_bbuf„r
;

230 
	}
}

232 
Cﬁour
 
	gRayåa˚r
::
	$shadeRay
–
Ray3D
& 
øy
 ) {

233 
Cﬁour
 
	`cﬁ
(0.0, 0.0, 0.0);

234 
	`åavî£S˚√
(
_roŸ
, 
øy
);

238 i‡(!
øy
.
öãr£˘i⁄
.
n⁄e
) {

239 
	`compuãShadög
(
øy
);

240 
cﬁ
 = 
øy
.col;

246  
cﬁ
;

247 
	}
}

249 
	gRayåa˚r
::
	$ªndî
–
width
, 
height
, 
Poöt3D
 
eye
, 
Ve˘‹3D
 
võw
,

250 
Ve˘‹3D
 
up
, 
fov
, 
°d
::
°rög
 
fûeName
 ) {

251 
	`compuãTønsf‹ms
(
_roŸ
);

252 
M©rix4x4
 
võwToW‹ld
;

253 
_s¸Width
 = 
width
;

254 
_s¸Height
 = 
height
;

255 
Á˘‹
 = ((
height
)/2)/
	`èn
(
fov
*
M_PI
/360.0);

257 
	`öôPixñBuf„r
();

258 
võwToW‹ld
 = 
	`öôInvVõwM©rix
(
eye
, 
võw
, 
up
);

261 
i
 = 0; i < 
_s¸Height
; i++) {

262 
j
 = 0; j < 
_s¸Width
; j++) {

265 
Poöt3D
 
	`‹igö
(0, 0, 0);

266 
Poöt3D
 
imagePœ√
;

267 
imagePœ√
[0] = (-(
width
)/2 + 0.5 + 
j
)/
Á˘‹
;

268 
imagePœ√
[1] = (-(
height
)/2 + 0.5 + 
i
)/
Á˘‹
;

269 
imagePœ√
[2] = -1;

274 
Ray3D
 
øy
;

276 
Cﬁour
 
cﬁ
 = 
	`shadeRay
(
øy
);

278 
_rbuf„r
[
i
*
width
+
j
] = (
cﬁ
[0]*255);

279 
_gbuf„r
[
i
*
width
+
j
] = (
cﬁ
[1]*255);

280 
_bbuf„r
[
i
*
width
+
j
] = (
cﬁ
[2]*255);

284 
	`ÊushPixñBuf„r
(
fûeName
);

285 
	}
}

	@raytracer.h

14 
	~"utû.h
"

15 
	~"s˚√_obje˘.h
"

16 
	~"light_sour˚.h
"

19 
	sLightLi°Node
 {

20 
LightLi°Node
(Ë: 
light
(
NULL
), 
√xt
(NULL) {}

21 
LightLi°Node
–
LightSour˚
* 
light
, LightLi°Node* 
√xt
 = 
NULL
 ) :

22 
light
÷ight), 
√xt
(next) {}

23 ~
LightLi°Node
() {

24 i‡(!
	mlight
Ë
dñëe
Üight;

26 
LightSour˚
* 
	mlight
;

27 
LightLi°Node
* 
	m√xt
;

31 
	sS˚√DagNode
 {

32 
S˚√DagNode
() :

33 
obj
(
NULL
), 
m©
(NULL),

34 
√xt
(
NULL
), 
∑ª¡
(NULL), 
chûd
(NULL) {

37 
S˚√DagNode
–
S˚√Obje˘
* 
obj
, 
M©îül
* 
m©
 ) :

38 
obj
(obj), 
m©
(m©), 
√xt
(
NULL
), 
∑ª¡
(NULL), 
chûd
(NULL) {

41 ~
S˚√DagNode
() {

42 i‡(!
	mobj
Ë
dñëe
 obj;

43 i‡(!
	mm©
Ë
dñëe
 mat;

47 
S˚√Obje˘
* 
	mobj
;

49 
M©îül
* 
	mm©
;

52 
M©rix4x4
 
	må™s
;

53 
M©rix4x4
 
	mövå™s
;

54 
M©rix4x4
 
	mmodñToW‹ld
;

55 
M©rix4x4
 
	mw‹ldToModñ
;

59 
S˚√DagNode
* 
	m√xt
;

60 
S˚√DagNode
* 
	m∑ª¡
;

61 
S˚√DagNode
* 
	mchûd
;

64 ˛as†
	cRayåa˚r
 {

65 
	mpublic
:

66 
Rayåa˚r
();

67 ~
Rayåa˚r
();

72 
ªndî
–
width
, 
height
, 
Poöt3D
 
eye
, 
Ve˘‹3D
 
võw
,

73 
Ve˘‹3D
 
up
, 
fov
, 
°d
::
°rög
 
fûeName
 );

78 
S˚√DagNode
* 
	$addObje˘
–
S˚√Obje˘
* 
obj
, 
M©îül
* 
m©
 ) {

79  
	`addObje˘
(
_roŸ
, 
obj
, 
m©
);

86 
S˚√DagNode
* 
	`addObje˘
–S˚√DagNode* 
∑ª¡
, 
S˚√Obje˘
* 
obj
,

87 
M©îül
* 
m©
 );

90 
LightLi°Node
* 
	`addLightSour˚
–
LightSour˚
* 
light
 );

96 
	`rŸ©e
–
S˚√DagNode
* 
node
, 
axis
, 
™gÀ
 );

99 
	`å™¶©e
–
S˚√DagNode
* 
node
, 
Ve˘‹3D
 
å™s
 );

102 
	`sˇÀ
–
S˚√DagNode
* 
node
, 
Poöt3D
 
‹igö
, 
Á˘‹
[3] );

104 
¥iv©e
:

108 
	`öôPixñBuf„r
();

111 
	`ÊushPixñBuf„r
(
°d
::
°rög
 
fûe_«me
);

115 
Cﬁour
 
	`shadeRay
–
Ray3D
& 
øy
 );

119 
M©rix4x4
 
	`öôInvVõwM©rix
–
Poöt3D
 
eye
, 
Ve˘‹3D
 
võw
, Ve˘‹3D 
up
 );

123 
	`åavî£S˚√
–
S˚√DagNode
* 
node
, 
Ray3D
& 
øy
 );

127 
	`compuãShadög
–
Ray3D
& 
øy
 );

131 
	`compuãTønsf‹ms
–
S˚√DagNode
* 
node
 );

135 
_s¸Width
;

136 
_s¸Height
;

139 
LightLi°Node
 *
_lightSour˚
;

140 
S˚√DagNode
 *
_roŸ
;

143 * 
_rbuf„r
;

144 * 
_gbuf„r
;

145 * 
_bbuf„r
;

149 
M©rix4x4
 
_modñToW‹ld
;

150 
M©rix4x4
 
_w‹ldToModñ
;

151 
	}
};

	@scene_object.cpp

11 
	~<cm©h
>

12 
	~<io°ªam
>

13 
	~"s˚√_obje˘.h
"

15 
boﬁ
 
	gUnôSqu¨e
::
	$öãr£˘
–
Ray3D
& 
øy
, c⁄° 
M©rix4x4
& 
w‹ldToModñ
,

16 c⁄° 
M©rix4x4
& 
modñToW‹ld
 ) {

29  
Ál£
;

30 
	}
}

32 
boﬁ
 
	gUnôSphîe
::
	$öãr£˘
–
Ray3D
& 
øy
, c⁄° 
M©rix4x4
& 
w‹ldToModñ
,

33 c⁄° 
M©rix4x4
& 
modñToW‹ld
 ) {

44  
Ál£
;

45 
	}
}

	@scene_object.h

11 
	~"utû.h
"

17 ˛as†
	cS˚√Obje˘
 {

18 
	mpublic
:

20 
vútuÆ
 
boﬁ
 
öãr£˘
–
Ray3D
&, c⁄° 
M©rix4x4
&, const Matrix4x4& ) = 0;

25 ˛as†
	cUnôSqu¨e
 : 
public
 
S˚√Obje˘
 {

26 
public
:

27 
boﬁ
 
öãr£˘
–
Ray3D
& 
øy
, c⁄° 
M©rix4x4
& 
w‹ldToModñ
,

28 c⁄° 
M©rix4x4
& 
modñToW‹ld
 );

31 ˛as†
	cUnôSphîe
 : 
public
 
S˚√Obje˘
 {

32 
public
:

33 
boﬁ
 
öãr£˘
–
Ray3D
& 
øy
, c⁄° 
M©rix4x4
& 
w‹ldToModñ
,

34 c⁄° 
M©rix4x4
& 
modñToW‹ld
 );

	@util.cpp

11 
	~<cm©h
>

12 
	~"utû.h
"

14 
	gPoöt3D
::
	$Poöt3D
() {

15 
m_d©a
[0] = 0.0;

16 
m_d©a
[1] = 0.0;

17 
m_d©a
[2] = 0.0;

18 
	}
}

20 
	gPoöt3D
::
	$Poöt3D
(
x
, 
y
, 
z
) {

21 
m_d©a
[0] = 
x
;

22 
m_d©a
[1] = 
y
;

23 
m_d©a
[2] = 
z
;

24 
	}
}

26 
	gPoöt3D
::
	$Poöt3D
(c⁄° 
Poöt3D
& 
Ÿhî
) {

27 
m_d©a
[0] = 
Ÿhî
.m_data[0];

28 
m_d©a
[1] = 
Ÿhî
.m_data[1];

29 
m_d©a
[2] = 
Ÿhî
.m_data[2];

30 
	}
}

32 
	gPoöt3D
& Poöt3D::
›î©‹
 =(c⁄° 
Poöt3D
& 
Ÿhî
) {

33 
m_d©a
[0] = 
Ÿhî
.m_data[0];

34 
	gm_d©a
[1] = 
Ÿhî
.
m_d©a
[1];

35 
	gm_d©a
[2] = 
Ÿhî
.
m_d©a
[2];

36  *
	gthis
;

39 & 
	gPoöt3D
::
›î©‹
[](
i
) {

40  
m_d©a
[
i
];

43 
	gPoöt3D
::
›î©‹
[](
i
) const {

44  
m_d©a
[
i
];

47 
	gVe˘‹3D
::
	$Ve˘‹3D
() {

48 
m_d©a
[0] = 0.0;

49 
m_d©a
[1] = 0.0;

50 
m_d©a
[2] = 0.0;

51 
	}
}

53 
	gVe˘‹3D
::
	$Ve˘‹3D
(
x
, 
y
, 
z
) {

54 
m_d©a
[0] = 
x
;

55 
m_d©a
[1] = 
y
;

56 
m_d©a
[2] = 
z
;

57 
	}
}

59 
	gVe˘‹3D
::
	$Ve˘‹3D
(c⁄° 
Ve˘‹3D
& 
Ÿhî
) {

60 
m_d©a
[0] = 
Ÿhî
.m_data[0];

61 
m_d©a
[1] = 
Ÿhî
.m_data[1];

62 
m_d©a
[2] = 
Ÿhî
.m_data[2];

63 
	}
}

65 
	gVe˘‹3D
& Ve˘‹3D::
›î©‹
 =(c⁄° 
Ve˘‹3D
& 
Ÿhî
) {

66 
m_d©a
[0] = 
Ÿhî
.m_data[0];

67 
	gm_d©a
[1] = 
Ÿhî
.
m_d©a
[1];

68 
	gm_d©a
[2] = 
Ÿhî
.
m_d©a
[2];

69  *
	gthis
;

72 & 
	gVe˘‹3D
::
›î©‹
[](
i
) {

73  
m_d©a
[
i
];

75 
	gVe˘‹3D
::
›î©‹
[](
i
) const {

76  
m_d©a
[
i
];

79 
	gVe˘‹3D
::
	$Àngth
() const

81  
	`sqπ
(
	`dŸ
(*
this
));

82 
	}
}

84 
	gVe˘‹3D
::
	$n‹mÆize
() {

85 
díom
 = 1.0;

86 
x
 = (
m_d©a
[0] > 0.0) ? m_data[0] : -m_data[0];

87 
y
 = (
m_d©a
[1] > 0.0) ? m_data[1] : -m_data[1];

88 
z
 = (
m_d©a
[2] > 0.0) ? m_data[2] : -m_data[2];

90 if(
x
 > 
y
) {

91 if(
x
 > 
z
) {

92 if(1.0 + 
x
 > 1.0) {

93 
y
 = y / 
x
;

94 
z
 = z / 
x
;

95 
díom
 = 1.0 / (
x
 * 
	`sqπ
(1.0 + 
y
*y + 
z
*z));

98 if(1.0 + 
z
 > 1.0) {

99 
y
 = y / 
z
;

100 
x
 = x / 
z
;

101 
díom
 = 1.0 / (
z
 * 
	`sqπ
(1.0 + 
y
*y + 
x
*x));

105 if(
y
 > 
z
) {

106 if(1.0 + 
y
 > 1.0) {

107 
z
 = z / 
y
;

108 
x
 = x / 
y
;

109 
díom
 = 1.0 / (
y
 * 
	`sqπ
(1.0 + 
z
*z + 
x
*x));

112 if(1.0 + 
z
 > 1.0) {

113 
y
 = y / 
z
;

114 
x
 = x / 
z
;

115 
díom
 = 1.0 / (
z
 * 
	`sqπ
(1.0 + 
y
*y + 
x
*x));

120 if(1.0 + 
x
 + 
y
 + 
z
 > 1.0) {

121 
m_d©a
[0] *
díom
;

122 
m_d©a
[1] *
díom
;

123 
m_d©a
[2] *
díom
;

124  1.0 / 
díom
;

128 
	}
}

130 
	gVe˘‹3D
::
	$dŸ
(c⁄° 
Ve˘‹3D
& 
Ÿhî
) const

132  
m_d©a
[0]*
Ÿhî
.m_data[0] +

133 
m_d©a
[1]*
Ÿhî
.m_data[1] +

134 
m_d©a
[2]*
Ÿhî
.m_data[2];

135 
	}
}

137 
Ve˘‹3D
 
	gVe˘‹3D
::
	$¸oss
(c⁄° 
Ve˘‹3D
& 
Ÿhî
) const

139  
	`Ve˘‹3D
(

140 
m_d©a
[1]*
Ÿhî
[2] - m_data[2]*other[1],

141 
m_d©a
[2]*
Ÿhî
[0] - m_data[0]*other[2],

142 
m_d©a
[0]*
Ÿhî
[1] - m_data[1]*other[0]);

143 
	}
}

145 
Ve˘‹3D
 
	g›î©‹
 *(
	gs
, c⁄° 
	gVe˘‹3D
& 
	gv
)

147  
Ve˘‹3D
(
s
*
v
[0], s*v[1], s*v[2]);

150 
Ve˘‹3D
 
	g›î©‹
 +(c⁄° 
	gVe˘‹3D
& 
	gu
, c⁄° Ve˘‹3D& 
	gv
)

152  
Ve˘‹3D
(
u
[0]+
v
[0], u[1]+v[1], u[2]+v[2]);

155 
Poöt3D
 
	g›î©‹
 +(c⁄° 
	gPoöt3D
& 
	gu
, c⁄° 
	gVe˘‹3D
& 
	gv
)

157  
Poöt3D
(
u
[0]+
v
[0], u[1]+v[1], u[2]+v[2]);

160 
Ve˘‹3D
 
	g›î©‹
 -(c⁄° 
	gPoöt3D
& 
	gu
, c⁄° Poöt3D& 
	gv
)

162  
Ve˘‹3D
(
u
[0]-
v
[0], u[1]-v[1], u[2]-v[2]);

165 
Ve˘‹3D
 
	g›î©‹
 -(c⁄° 
	gVe˘‹3D
& 
	gu
, c⁄° Ve˘‹3D& 
	gv
)

167  
Ve˘‹3D
(
u
[0]-
v
[0], u[1]-v[1], u[2]-v[2]);

170 
Ve˘‹3D
 
	g›î©‹
 -(c⁄° 
	gVe˘‹3D
& 
	gu
)

172  
Ve˘‹3D
(-
u
[0], -u[1], -u[2]);

175 
Poöt3D
 
	g›î©‹
 -(c⁄° 
	gPoöt3D
& 
	gu
, c⁄° 
	gVe˘‹3D
& 
	gv
)

177  
Poöt3D
(
u
[0]-
v
[0], u[1]-v[1], u[2]-v[2]);

180 
Ve˘‹3D
 
	$¸oss
(c⁄° 
Ve˘‹3D
& 
u
, c⁄° Ve˘‹3D& 
v
)

182  
u
.
	`¸oss
(
v
);

183 
	}
}

185 
	g°d
::
o°ªam
& 
›î©‹
 <<(
°d
::o°ªam& 
s
, c⁄° 
	gPoöt3D
& 
	gp
)

187  
	gs
 << "p(" << 
	gp
[0] << "," <<Ö[1] << "," <<Ö[2] << ")";

190 
	g°d
::
o°ªam
& 
›î©‹
 <<(
°d
::o°ªam& 
s
, c⁄° 
	gVe˘‹3D
& 
	gv
)

192  
	gs
 << "v(" << 
	gv
[0] << "," << v[1] << "," << v[2] << ")";

195 
	gCﬁour
::
	$Cﬁour
() {

196 
m_d©a
[0] = 0.0;

197 
m_d©a
[1] = 0.0;

198 
m_d©a
[2] = 0.0;

199 
	}
}

201 
	gCﬁour
::
	$Cﬁour
(
r
, 
g
, 
b
) {

202 
m_d©a
[0] = 
r
;

203 
m_d©a
[1] = 
g
;

204 
m_d©a
[2] = 
b
;

205 
	}
}

207 
	gCﬁour
::
	$Cﬁour
(c⁄° 
Cﬁour
& 
Ÿhî
) {

208 
m_d©a
[0] = 
Ÿhî
.m_data[0];

209 
m_d©a
[1] = 
Ÿhî
.m_data[1];

210 
m_d©a
[2] = 
Ÿhî
.m_data[2];

211 
	}
}

213 
	gCﬁour
& Cﬁour::
›î©‹
 =(c⁄° 
Cﬁour
& 
Ÿhî
) {

214 
m_d©a
[0] = 
Ÿhî
.m_data[0];

215 
	gm_d©a
[1] = 
Ÿhî
.
m_d©a
[1];

216 
	gm_d©a
[2] = 
Ÿhî
.
m_d©a
[2];

217  *
	gthis
;

220 
Cﬁour
 
	gCﬁour
::
›î©‹
 *(c⁄° Cﬁour& 
Ÿhî
) {

221  
Cﬁour
(
m_d©a
[0]*
Ÿhî
.m_data[0],

222 
m_d©a
[1]*
Ÿhî
.m_data[1],

223 
m_d©a
[2]*
Ÿhî
.m_data[2]);

226 & 
	gCﬁour
::
›î©‹
[](
i
) {

227  
m_d©a
[
i
];

229 
	gCﬁour
::
›î©‹
[](
i
) const {

230  
m_d©a
[
i
];

233 
	gCﬁour
::
	$˛amp
() {

234 
i
 = 0; i < 3; i++) {

235 i‡(
m_d©a
[
i
] > 1.0) m_data[i] = 1.0;

236 i‡(
m_d©a
[
i
] < 0.0) m_data[i] = 0.0;

238 
	}
}

240 
Cﬁour
 
	g›î©‹
 *(
	gs
, c⁄° 
	gCﬁour
& 
	gc
)

242  
Cﬁour
(
s
*
c
[0], s*c[1], s*c[2]);

245 
Cﬁour
 
	g›î©‹
 +(c⁄° 
	gCﬁour
& 
	gu
, c⁄° Cﬁour& 
	gv
)

247  
Cﬁour
(
u
[0]+
v
[0], u[1]+v[1], u[2]+v[2]);

250 
	g°d
::
o°ªam
& 
›î©‹
 <<(
°d
::o°ªam& 
s
, c⁄° 
	gCﬁour
& 
	gc
)

252  
	gs
 << "c(" << 
	gc
[0] << "," << c[1] << "," << c[2] << ")";

255 
	gVe˘‹4D
::
	$Ve˘‹4D
() {

256 
m_d©a
[0] = 0.0;

257 
m_d©a
[1] = 0.0;

258 
m_d©a
[2] = 0.0;

259 
m_d©a
[3] = 0.0;

260 
	}
}

262 
	gVe˘‹4D
::
	$Ve˘‹4D
(
w
, 
x
, 
y
, 
z
) {

263 
m_d©a
[0] = 
w
;

264 
m_d©a
[1] = 
x
;

265 
m_d©a
[2] = 
y
;

266 
m_d©a
[3] = 
z
;

267 
	}
}

269 
	gVe˘‹4D
::
	$Ve˘‹4D
(c⁄° 
Ve˘‹4D
& 
Ÿhî
) {

270 
m_d©a
[0] = 
Ÿhî
.m_data[0];

271 
m_d©a
[1] = 
Ÿhî
.m_data[1];

272 
m_d©a
[2] = 
Ÿhî
.m_data[2];

273 
m_d©a
[3] = 
Ÿhî
.m_data[3];

274 
	}
}

276 
	gVe˘‹4D
& Ve˘‹4D::
›î©‹
 =(c⁄° 
Ve˘‹4D
& 
Ÿhî
) {

277 
m_d©a
[0] = 
Ÿhî
.m_data[0];

278 
	gm_d©a
[1] = 
Ÿhî
.
m_d©a
[1];

279 
	gm_d©a
[2] = 
Ÿhî
.
m_d©a
[2];

280 
	gm_d©a
[3] = 
Ÿhî
.
m_d©a
[3];

281  *
	gthis
;

284 & 
	gVe˘‹4D
::
›î©‹
[](
i
) {

285  
m_d©a
[
i
];

287 
	gVe˘‹4D
::
›î©‹
[](
i
) const {

288  
m_d©a
[
i
];

291 
	gM©rix4x4
::
	$M©rix4x4
() {

292 
i
 = 0; i < 16; i++)

293 
m_d©a
[
i
] = 0.0;

294 
m_d©a
[0] = 1.0;

295 
m_d©a
[5] = 1.0;

296 
m_d©a
[10] = 1.0;

297 
m_d©a
[15] = 1.0;

298 
	}
}

300 
	gM©rix4x4
::
	$M©rix4x4
(c⁄° 
M©rix4x4
& 
Ÿhî
) {

301 
i
 = 0; i < 16; i++)

302 
m_d©a
[
i
] = 
Ÿhî
.m_data[i];

303 
	}
}

305 
	gM©rix4x4
& M©rix4x4::
›î©‹
=(c⁄° 
M©rix4x4
& 
Ÿhî
) {

306 
i
 = 0; 
	gi
 < 16; i++)

307 
	gm_d©a
[
i
] = 
Ÿhî
.
m_d©a
[i];

308  *
	gthis
;

311 
Ve˘‹4D
 
	gM©rix4x4
::
	$gëRow
(
row
) const {

312  
	`Ve˘‹4D
(
m_d©a
[4*
row
], m_data[4*row+1], m_data[4*row+2],

313 
m_d©a
[4*
row
+3]);

314 
	}
}

316 * 
	gM©rix4x4
::
	$gëRow
(
row
) {

317  (*)
m_d©a
 + 4*
row
;

318 
	}
}

320 
Ve˘‹4D
 
	gM©rix4x4
::
	$gëCﬁumn
(
cﬁ
) const {

321  
	`Ve˘‹4D
(
m_d©a
[
cﬁ
], m_data[4+col], m_data[8+col],

322 
m_d©a
[12+
cﬁ
]);

323 
	}
}

325 
Ve˘‹4D
 
	gM©rix4x4
::
›î©‹
[](
row
) const {

326  
gëRow
(
row
);

329 * 
	gM©rix4x4
::
›î©‹
[](
row
) {

330  
gëRow
(
row
);

333 
M©rix4x4
 
	gM©rix4x4
::
	$å™•o£
() const {

334 
M©rix4x4
 
M
;

335 
i
 = 0; i < 4; i++) {

336 
j
 = 0; j < 4; j++) {

337 
M
[
i
][
j
] = (*
this
)[j][i];

340  
M
;

341 
	}
}

343 
M©rix4x4
 
	g›î©‹
 *(c⁄° 
	gM©rix4x4
& 
	ga
, c⁄° M©rix4x4& 
	gb
) {

344 
M©rix4x4
 
	gªt
;

346 
size_t
 
	gi
 = 0; i < 4; ++i) {

347 
Ve˘‹4D
 
	grow
 = 
a
.
gëRow
(
i
);

349 
size_t
 
	gj
 = 0; j < 4; ++j) {

350 
	gªt
[
i
][
j
] = 
row
[0] * 
b
[0][j] +Ñow[1] * b[1][j] +

351 
row
[2] * 
b
[2][
j
] +Ñow[3] * b[3][j];

355  
	gªt
;

358 
Ve˘‹3D
 
	g›î©‹
 *(c⁄° 
	gM©rix4x4
& 
	gM
, c⁄° 
	gVe˘‹3D
& 
	gv
) {

359  
Ve˘‹3D
(

360 
v
[0] * 
M
[0][0] + v[1] * M[0][1] + v[2] * M[0][2],

361 
v
[0] * 
M
[1][0] + v[1] * M[1][1] + v[2] * M[1][2],

362 
v
[0] * 
M
[2][0] + v[1] * M[2][1] + v[2] * M[2][2]);

365 
Poöt3D
 
	g›î©‹
 *(c⁄° 
	gM©rix4x4
& 
	gM
, c⁄° 
	gPoöt3D
& 
	gp
) {

366  
Poöt3D
(

367 
p
[0] * 
M
[0][0] +Ö[1] * M[0][1] +Ö[2] * M[0][2] + M[0][3],

368 
p
[0] * 
M
[1][0] +Ö[1] * M[1][1] +Ö[2] * M[1][2] + M[1][3],

369 
p
[0] * 
M
[2][0] +Ö[1] * M[2][1] +Ö[2] * M[2][2] + M[2][3]);

372 
Ve˘‹3D
 
	$å™sN‹m
(c⁄° 
M©rix4x4
& 
M
, c⁄° 
Ve˘‹3D
& 
n
) {

373  
	`Ve˘‹3D
(

374 
n
[0] * 
M
[0][0] +Ç[1] * M[1][0] +Ç[2] * M[2][0],

375 
n
[0] * 
M
[0][1] +Ç[1] * M[1][1] +Ç[2] * M[2][1],

376 
n
[0] * 
M
[0][2] +Ç[1] * M[1][2] +Ç[2] * M[2][2]);

377 
	}
}

379 
	g°d
::
o°ªam
& 
›î©‹
 <<(
°d
::o°ªam& 
os
, c⁄° 
	gM©rix4x4
& 
	gM
) {

380  
	gos
 << "[" << 
	gM
[0][0] << " " << M[0][1] << " "

381 << 
	gM
[0][2] << " " << M[0][3] << "]" << 
	g°d
::
ídl


382 << "[" << 
M
[1][0] << " " << M[1][1] << " "

383 << 
M
[1][2] << " " << M[1][3] << "]" << 
°d
::
ídl


384 << "[" << 
M
[2][0] << " " << M[2][1] << " "

385 << 
M
[2][2] << " " << M[2][3] << "]" << 
°d
::
ídl


386 << "[" << 
M
[3][0] << " " << M[3][1] << " "

387 << 
M
[3][2] << " " << M[3][3] << "]";

	@util.h

13 #i‚de‡
_UTIL_


14 
	#_UTIL_


	)

16 
	~<io°ªam
>

17 
	~<cm©h
>

19 #i‚de‡
M_PI


20 
	#M_PI
 3.14159265358979323846

	)

23 ˛as†
	cPoöt3D
 {

24 
	mpublic
:

25 
Poöt3D
();

26 
Poöt3D
(
x
, 
y
, 
z
);

27 
Poöt3D
(c⁄° Poöt3D& 
Ÿhî
);

29 
	mPoöt3D
& 
	m›î©‹
 =(c⁄° 
Poöt3D
& 
Ÿhî
);

30 & 
	m›î©‹
[](
	mi
);

31 
	m›î©‹
[](
	mi
) const;

33 
	m¥iv©e
:

34 
m_d©a
[3];

37 ˛as†
	cVe˘‹3D
 {

38 
	mpublic
:

39 
Ve˘‹3D
();

40 
Ve˘‹3D
(
x
, 
y
, 
z
);

41 
Ve˘‹3D
(c⁄° Ve˘‹3D& 
Ÿhî
);

43 
	mVe˘‹3D
& 
	m›î©‹
 =(c⁄° 
Ve˘‹3D
& 
Ÿhî
);

44 & 
	m›î©‹
[](
	mi
);

45 
	m›î©‹
[](
	mi
) const;

47 
	$Àngth
() const;

48 
	`n‹mÆize
();

49 
	$dŸ
(c⁄° 
Ve˘‹3D
& 
Ÿhî
) const;

50 
Ve˘‹3D
 
	$¸oss
(c⁄° 
Ve˘‹3D
& 
Ÿhî
) const;

52 
¥iv©e
:

53 
m_d©a
[3];

57 
Ve˘‹3D
 
›î©‹
 *(
s
, c⁄° Ve˘‹3D& 
v
);

58 
Ve˘‹3D
 
›î©‹
 +(c⁄° Ve˘‹3D& 
u
, c⁄° Ve˘‹3D& 
v
);

59 
Poöt3D
 
›î©‹
 +(c⁄° Poöt3D& 
u
, c⁄° 
Ve˘‹3D
& 
v
);

60 
Ve˘‹3D
 
›î©‹
 -(c⁄° 
Poöt3D
& 
u
, c⁄° Poöt3D& 
v
);

61 
Ve˘‹3D
 
›î©‹
 -(c⁄° Ve˘‹3D& 
u
, c⁄° Ve˘‹3D& 
v
);

62 
Ve˘‹3D
 
›î©‹
 -(c⁄° Ve˘‹3D& 
u
);

63 
Poöt3D
 
›î©‹
 -(c⁄° Poöt3D& 
u
, c⁄° 
Ve˘‹3D
& 
v
);

64 
Ve˘‹3D
 
	`¸oss
(c⁄° Ve˘‹3D& 
u
, c⁄° Ve˘‹3D& 
v
);

65 
°d
::
o°ªam
& 
›î©‹
 <<(°d::o°ªam& 
o
, c⁄° 
Poöt3D
& 
p
);

66 
°d
::
o°ªam
& 
›î©‹
 <<(°d::o°ªam& 
o
, c⁄° 
Ve˘‹3D
& 
v
);

68 ˛as†
	cVe˘‹4D
 {

69 
public
:

70 
	`Ve˘‹4D
();

71 
	`Ve˘‹4D
(
w
, 
x
, 
y
, 
z
);

72 
	`Ve˘‹4D
(c⁄° 
Ve˘‹4D
& 
Ÿhî
);

74 
Ve˘‹4D
& 
›î©‹
 =(c⁄° Ve˘‹4D& 
Ÿhî
);

75 & 
›î©‹
[](
i
);

76 
›î©‹
[](
i
) const;

78 
¥iv©e
:

79 
m_d©a
[4];

82 ˛as†
	cM©rix4x4
 {

83 
public
:

84 
	`M©rix4x4
();

85 
	`M©rix4x4
(c⁄° 
M©rix4x4
& 
Ÿhî
);

86 
M©rix4x4
& 
›î©‹
=(c⁄° M©rix4x4& 
Ÿhî
);

88 
Ve˘‹4D
 
	$gëRow
(
row
) const;

89 *
	`gëRow
(
row
);

90 
Ve˘‹4D
 
	$gëCﬁumn
(
cﬁ
) const;

92 
Ve˘‹4D
 
›î©‹
[](
row
) const;

93 *
›î©‹
[](
row
);

95 
M©rix4x4
 
	$å™•o£
() const;

97 
¥iv©e
:

98 
m_d©a
[16];

101 
M©rix4x4
 
›î©‹
 *(c⁄° M©rix4x4& 
M
, c⁄° M©rix4x4& 
N
);

102 
Ve˘‹3D
 
›î©‹
 *(c⁄° 
M©rix4x4
& 
M
, c⁄° Ve˘‹3D& 
v
);

103 
Poöt3D
 
›î©‹
 *(c⁄° 
M©rix4x4
& 
M
, c⁄° Poöt3D& 
p
);

107 
Ve˘‹3D
 
	`å™sN‹m
(c⁄° 
M©rix4x4
& 
M
, c⁄° Ve˘‹3D& 
n
);

108 
°d
::
o°ªam
& 
›î©‹
 <<(°d::o°ªam& 
os
, c⁄° 
M©rix4x4
& 
M
);

110 ˛as†
	cCﬁour
 {

111 
public
:

112 
	`Cﬁour
();

113 
	`Cﬁour
(
r
, 
g
, 
b
);

114 
	`Cﬁour
(c⁄° 
Cﬁour
& 
Ÿhî
);

116 
Cﬁour
& 
›î©‹
 =(c⁄° Cﬁour& 
Ÿhî
);

117 
Cﬁour
 
›î©‹
 *(c⁄° Cﬁour& 
Ÿhî
);

118 & 
›î©‹
[](
i
);

119 
›î©‹
[](
i
) const;

121 
	`˛amp
();

123 
¥iv©e
:

124 
m_d©a
[3];

127 
Cﬁour
 
›î©‹
 *(
s
, c⁄° Cﬁour& 
c
);

128 
Cﬁour
 
›î©‹
 +(c⁄° Cﬁour& 
u
, c⁄° Cﬁour& 
v
);

129 
°d
::
o°ªam
& 
›î©‹
 <<(°d::o°ªam& 
o
, c⁄° 
Cﬁour
& 
c
);

131 
	sM©îül
 {

132 
	`M©îül
–
Cﬁour
 
ambõ¡
, Cﬁou∏
diffu£
, Cﬁou∏
•ecuœr
, 
exp
 ) :

133 
	`ambõ¡
(
ambõ¡
), 
	`diffu£
(
diffu£
), 
	`•ecuœr
(
•ecuœr
),

134 
	`•ecuœr_exp
(
exp
) {}

137 
Cﬁour
 
ambõ¡
;

139 
Cﬁour
 
diffu£
;

141 
Cﬁour
 
•ecuœr
;

143 
•ecuœr_exp
;

146 
	sI¡î£˘i⁄
 {

148 
Poöt3D
 
poöt
;

150 
Ve˘‹3D
 
n‹mÆ
;

152 
M©îül
* 
m©
;

157 
t_vÆue
;

159 
boﬁ
 
n⁄e
;

163 
	sRay3D
 {

164 
	`Ray3D
() {

165 
öãr£˘i⁄
.
n⁄e
 = 
åue
;

167 
	`Ray3D
–
Poöt3D
 
p
, 
Ve˘‹3D
 
v
 ) : 
	`‹igö
’), 
	`dú
(v) {

168 
öãr£˘i⁄
.
n⁄e
 = 
åue
;

171 
Poöt3D
 
‹igö
;

172 
Ve˘‹3D
 
dú
;

175 
I¡î£˘i⁄
 
öãr£˘i⁄
;

178 
Cﬁour
 
cﬁ
;

	@
1
.
1
/usr/include
11
135
bmp_io.cpp
bmp_io.h
light_source.cpp
light_source.h
main.cpp
raytracer.cpp
raytracer.h
scene_object.cpp
scene_object.h
util.cpp
util.h
